S0{
	S' : •Grammar «$»
	Grammar : •LexicalPart SyntaxPart «$»
	Grammar : •LexicalPart «$»
	Grammar : •SyntaxPart «$»
	LexicalPart : •LexProductions «actionLit»
	LexicalPart : •LexProductions «prodId»
	LexicalPart : •LexProductions «$»
	SyntaxPart : •FileHeader SyntaxProdList «$»
	SyntaxPart : •SyntaxProdList «$»
	LexProductions : •LexProduction «actionLit»
	LexProductions : •LexProductions LexProduction «actionLit»
	LexProductions : •LexProduction «prodId»
	LexProductions : •LexProductions LexProduction «prodId»
	LexProductions : •LexProduction «$»
	LexProductions : •LexProductions LexProduction «$»
	FileHeader : •actionLit «prodId»
	SyntaxProdList : •SyntaxProduction «$»
	SyntaxProdList : •SyntaxProdList SyntaxProduction «$»
	LexProduction : •tokId : LexPattern ; «actionLit»
	LexProduction : •regDefId : LexPattern ; «actionLit»
	LexProduction : •ignoredTokId : LexPattern ; «actionLit»
	LexProductions : •LexProduction «tokId»
	LexProductions : •LexProduction «regDefId»
	LexProductions : •LexProduction «ignoredTokId»
	LexProductions : •LexProductions LexProduction «tokId»
	LexProductions : •LexProductions LexProduction «regDefId»
	LexProductions : •LexProductions LexProduction «ignoredTokId»
	LexProduction : •tokId : LexPattern ; «prodId»
	LexProduction : •regDefId : LexPattern ; «prodId»
	LexProduction : •ignoredTokId : LexPattern ; «prodId»
	LexProduction : •tokId : LexPattern ; «$»
	LexProduction : •regDefId : LexPattern ; «$»
	LexProduction : •ignoredTokId : LexPattern ; «$»
	SyntaxProduction : •prodId : SyntaxExpression ; «$»
	SyntaxProdList : •SyntaxProduction «prodId»
	SyntaxProdList : •SyntaxProdList SyntaxProduction «prodId»
	LexProduction : •tokId : LexPattern ; «tokId»
	LexProduction : •regDefId : LexPattern ; «tokId»
	LexProduction : •ignoredTokId : LexPattern ; «tokId»
	LexProduction : •tokId : LexPattern ; «regDefId»
	LexProduction : •regDefId : LexPattern ; «regDefId»
	LexProduction : •ignoredTokId : LexPattern ; «regDefId»
	LexProduction : •tokId : LexPattern ; «ignoredTokId»
	LexProduction : •regDefId : LexPattern ; «ignoredTokId»
	LexProduction : •ignoredTokId : LexPattern ; «ignoredTokId»
	SyntaxProduction : •prodId : SyntaxExpression ; «prodId»
}
Transitions:
	LexicalPart -> 2
	LexProductions -> 4
	LexProduction -> 5
	tokId -> 6
	regDefId -> 7
	ignoredTokId -> 8
	SyntaxProdList -> 10
	SyntaxProduction -> 12
	Grammar -> 1
	SyntaxPart -> 3
	FileHeader -> 9
	actionLit -> 11
	prodId -> 13


S1{
	S' : Grammar• «$»
}
Transitions:


S2{
	Grammar : LexicalPart •SyntaxPart «$»
	Grammar : LexicalPart• «$»
	SyntaxPart : •FileHeader SyntaxProdList «$»
	SyntaxPart : •SyntaxProdList «$»
	FileHeader : •actionLit «prodId»
	SyntaxProdList : •SyntaxProduction «$»
	SyntaxProdList : •SyntaxProdList SyntaxProduction «$»
	SyntaxProduction : •prodId : SyntaxExpression ; «$»
	SyntaxProdList : •SyntaxProduction «prodId»
	SyntaxProdList : •SyntaxProdList SyntaxProduction «prodId»
	SyntaxProduction : •prodId : SyntaxExpression ; «prodId»
}
Transitions:
	SyntaxPart -> 14
	FileHeader -> 9
	SyntaxProdList -> 10
	actionLit -> 11
	SyntaxProduction -> 12
	prodId -> 13


S3{
	Grammar : SyntaxPart• «$»
}
Transitions:


S4{
	LexicalPart : LexProductions• «actionLit»
	LexicalPart : LexProductions• «prodId»
	LexicalPart : LexProductions• «$»
	LexProductions : LexProductions •LexProduction «actionLit»
	LexProductions : LexProductions •LexProduction «prodId»
	LexProductions : LexProductions •LexProduction «$»
	LexProductions : LexProductions •LexProduction «tokId»
	LexProductions : LexProductions •LexProduction «regDefId»
	LexProductions : LexProductions •LexProduction «ignoredTokId»
	LexProduction : •tokId : LexPattern ; «actionLit»
	LexProduction : •regDefId : LexPattern ; «actionLit»
	LexProduction : •ignoredTokId : LexPattern ; «actionLit»
	LexProduction : •tokId : LexPattern ; «prodId»
	LexProduction : •regDefId : LexPattern ; «prodId»
	LexProduction : •ignoredTokId : LexPattern ; «prodId»
	LexProduction : •tokId : LexPattern ; «$»
	LexProduction : •regDefId : LexPattern ; «$»
	LexProduction : •ignoredTokId : LexPattern ; «$»
	LexProduction : •tokId : LexPattern ; «tokId»
	LexProduction : •regDefId : LexPattern ; «tokId»
	LexProduction : •ignoredTokId : LexPattern ; «tokId»
	LexProduction : •tokId : LexPattern ; «regDefId»
	LexProduction : •regDefId : LexPattern ; «regDefId»
	LexProduction : •ignoredTokId : LexPattern ; «regDefId»
	LexProduction : •tokId : LexPattern ; «ignoredTokId»
	LexProduction : •regDefId : LexPattern ; «ignoredTokId»
	LexProduction : •ignoredTokId : LexPattern ; «ignoredTokId»
}
Transitions:
	LexProduction -> 15
	tokId -> 6
	regDefId -> 7
	ignoredTokId -> 8


S5{
	LexProductions : LexProduction• «actionLit»
	LexProductions : LexProduction• «prodId»
	LexProductions : LexProduction• «$»
	LexProductions : LexProduction• «tokId»
	LexProductions : LexProduction• «regDefId»
	LexProductions : LexProduction• «ignoredTokId»
}
Transitions:


S6{
	LexProduction : tokId •: LexPattern ; «actionLit»
	LexProduction : tokId •: LexPattern ; «prodId»
	LexProduction : tokId •: LexPattern ; «$»
	LexProduction : tokId •: LexPattern ; «tokId»
	LexProduction : tokId •: LexPattern ; «regDefId»
	LexProduction : tokId •: LexPattern ; «ignoredTokId»
}
Transitions:
	: -> 16


S7{
	LexProduction : regDefId •: LexPattern ; «actionLit»
	LexProduction : regDefId •: LexPattern ; «prodId»
	LexProduction : regDefId •: LexPattern ; «$»
	LexProduction : regDefId •: LexPattern ; «tokId»
	LexProduction : regDefId •: LexPattern ; «regDefId»
	LexProduction : regDefId •: LexPattern ; «ignoredTokId»
}
Transitions:
	: -> 17


S8{
	LexProduction : ignoredTokId •: LexPattern ; «actionLit»
	LexProduction : ignoredTokId •: LexPattern ; «prodId»
	LexProduction : ignoredTokId •: LexPattern ; «$»
	LexProduction : ignoredTokId •: LexPattern ; «tokId»
	LexProduction : ignoredTokId •: LexPattern ; «regDefId»
	LexProduction : ignoredTokId •: LexPattern ; «ignoredTokId»
}
Transitions:
	: -> 18


S9{
	SyntaxPart : FileHeader •SyntaxProdList «$»
	SyntaxProdList : •SyntaxProduction «$»
	SyntaxProdList : •SyntaxProdList SyntaxProduction «$»
	SyntaxProduction : •prodId : SyntaxExpression ; «$»
	SyntaxProdList : •SyntaxProduction «prodId»
	SyntaxProdList : •SyntaxProdList SyntaxProduction «prodId»
	SyntaxProduction : •prodId : SyntaxExpression ; «prodId»
}
Transitions:
	SyntaxProdList -> 19
	SyntaxProduction -> 12
	prodId -> 13


S10{
	SyntaxPart : SyntaxProdList• «$»
	SyntaxProdList : SyntaxProdList •SyntaxProduction «$»
	SyntaxProdList : SyntaxProdList •SyntaxProduction «prodId»
	SyntaxProduction : •prodId : SyntaxExpression ; «$»
	SyntaxProduction : •prodId : SyntaxExpression ; «prodId»
}
Transitions:
	SyntaxProduction -> 20
	prodId -> 13


S11{
	FileHeader : actionLit• «prodId»
}
Transitions:


S12{
	SyntaxProdList : SyntaxProduction• «$»
	SyntaxProdList : SyntaxProduction• «prodId»
}
Transitions:


S13{
	SyntaxProduction : prodId •: SyntaxExpression ; «$»
	SyntaxProduction : prodId •: SyntaxExpression ; «prodId»
}
Transitions:
	: -> 21


S14{
	Grammar : LexicalPart SyntaxPart• «$»
}
Transitions:


S15{
	LexProductions : LexProductions LexProduction• «actionLit»
	LexProductions : LexProductions LexProduction• «prodId»
	LexProductions : LexProductions LexProduction• «$»
	LexProductions : LexProductions LexProduction• «tokId»
	LexProductions : LexProductions LexProduction• «regDefId»
	LexProductions : LexProductions LexProduction• «ignoredTokId»
}
Transitions:


S16{
	LexProduction : tokId : •LexPattern ; «actionLit»
	LexProduction : tokId : •LexPattern ; «prodId»
	LexProduction : tokId : •LexPattern ; «$»
	LexProduction : tokId : •LexPattern ; «tokId»
	LexProduction : tokId : •LexPattern ; «regDefId»
	LexProduction : tokId : •LexPattern ; «ignoredTokId»
	LexPattern : •LexAlt «;»
	LexPattern : •LexPattern | LexAlt «;»
	LexAlt : •LexTerm «;»
	LexAlt : •LexAlt LexTerm «;»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «;»
	LexTerm : •char_lit «;»
	LexTerm : •char_lit - char_lit «;»
	LexTerm : •regDefId «;»
	LexTerm : •[ LexPattern ] «;»
	LexTerm : •{ LexPattern } «;»
	LexTerm : •( LexPattern ) «;»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	LexPattern -> 22
	regDefId -> 23
	{ -> 29
	LexAlt -> 24
	LexTerm -> 25
	. -> 26
	char_lit -> 27
	[ -> 28
	( -> 30


S17{
	LexProduction : regDefId : •LexPattern ; «actionLit»
	LexProduction : regDefId : •LexPattern ; «prodId»
	LexProduction : regDefId : •LexPattern ; «$»
	LexProduction : regDefId : •LexPattern ; «tokId»
	LexProduction : regDefId : •LexPattern ; «regDefId»
	LexProduction : regDefId : •LexPattern ; «ignoredTokId»
	LexPattern : •LexAlt «;»
	LexPattern : •LexPattern | LexAlt «;»
	LexAlt : •LexTerm «;»
	LexAlt : •LexAlt LexTerm «;»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «;»
	LexTerm : •char_lit «;»
	LexTerm : •char_lit - char_lit «;»
	LexTerm : •regDefId «;»
	LexTerm : •[ LexPattern ] «;»
	LexTerm : •{ LexPattern } «;»
	LexTerm : •( LexPattern ) «;»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	LexPattern -> 31
	LexAlt -> 24
	LexTerm -> 25
	[ -> 28
	{ -> 29
	regDefId -> 23
	. -> 26
	char_lit -> 27
	( -> 30


S18{
	LexProduction : ignoredTokId : •LexPattern ; «actionLit»
	LexProduction : ignoredTokId : •LexPattern ; «prodId»
	LexProduction : ignoredTokId : •LexPattern ; «$»
	LexProduction : ignoredTokId : •LexPattern ; «tokId»
	LexProduction : ignoredTokId : •LexPattern ; «regDefId»
	LexProduction : ignoredTokId : •LexPattern ; «ignoredTokId»
	LexPattern : •LexAlt «;»
	LexPattern : •LexPattern | LexAlt «;»
	LexAlt : •LexTerm «;»
	LexAlt : •LexAlt LexTerm «;»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «;»
	LexTerm : •char_lit «;»
	LexTerm : •char_lit - char_lit «;»
	LexTerm : •regDefId «;»
	LexTerm : •[ LexPattern ] «;»
	LexTerm : •{ LexPattern } «;»
	LexTerm : •( LexPattern ) «;»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	LexAlt -> 24
	. -> 26
	char_lit -> 27
	[ -> 28
	{ -> 29
	( -> 30
	LexPattern -> 32
	regDefId -> 23
	LexTerm -> 25


S19{
	SyntaxPart : FileHeader SyntaxProdList• «$»
	SyntaxProdList : SyntaxProdList •SyntaxProduction «$»
	SyntaxProdList : SyntaxProdList •SyntaxProduction «prodId»
	SyntaxProduction : •prodId : SyntaxExpression ; «$»
	SyntaxProduction : •prodId : SyntaxExpression ; «prodId»
}
Transitions:
	SyntaxProduction -> 20
	prodId -> 13


S20{
	SyntaxProdList : SyntaxProdList SyntaxProduction• «$»
	SyntaxProdList : SyntaxProdList SyntaxProduction• «prodId»
}
Transitions:


S21{
	SyntaxProduction : prodId : •SyntaxExpression ; «$»
	SyntaxProduction : prodId : •SyntaxExpression ; «prodId»
	SyntaxExpression : •SyntaxBody «;»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «;»
	SyntaxBody : •SyntaxTerms «;»
	SyntaxBody : •SyntaxTerms actionLit «;»
	SyntaxBody : •error «;»
	SyntaxBody : •error SyntaxTerms «;»
	SyntaxBody : •error SyntaxTerms actionLit «;»
	SyntaxExpression : •SyntaxBody «|»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «|»
	SyntaxTerms : •SyntaxTerm «;»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «;»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerm : •prodId «;»
	SyntaxTerm : •tokId «;»
	SyntaxTerm : •stringLit «;»
	SyntaxTerm : •( SyntaxExpression ) «;»
	SyntaxTerm : •[ SyntaxExpression ] «;»
	SyntaxTerm : •{ SyntaxExpression } «;»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	{ -> 35
	( -> 36
	prodId -> 37
	SyntaxExpression -> 38
	SyntaxBody -> 39
	SyntaxTerms -> 40
	stringLit -> 43
	tokId -> 33
	[ -> 34
	error -> 41
	SyntaxTerm -> 42


S22{
	LexProduction : tokId : LexPattern •; «actionLit»
	LexProduction : tokId : LexPattern •; «prodId»
	LexProduction : tokId : LexPattern •; «$»
	LexProduction : tokId : LexPattern •; «tokId»
	LexProduction : tokId : LexPattern •; «regDefId»
	LexProduction : tokId : LexPattern •; «ignoredTokId»
	LexPattern : LexPattern •| LexAlt «;»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	; -> 44
	| -> 45


S23{
	LexTerm : regDefId• «;»
	LexTerm : regDefId• «.»
	LexTerm : regDefId• «char_lit»
	LexTerm : regDefId• «regDefId»
	LexTerm : regDefId• «[»
	LexTerm : regDefId• «{»
	LexTerm : regDefId• «(»
	LexTerm : regDefId• «|»
}
Transitions:


S24{
	LexPattern : LexAlt• «;»
	LexAlt : LexAlt •LexTerm «;»
	LexPattern : LexAlt• «|»
	LexAlt : LexAlt •LexTerm «.»
	LexAlt : LexAlt •LexTerm «char_lit»
	LexAlt : LexAlt •LexTerm «regDefId»
	LexAlt : LexAlt •LexTerm «[»
	LexAlt : LexAlt •LexTerm «{»
	LexAlt : LexAlt •LexTerm «(»
	LexAlt : LexAlt •LexTerm «|»
	LexTerm : •. «;»
	LexTerm : •char_lit «;»
	LexTerm : •char_lit - char_lit «;»
	LexTerm : •regDefId «;»
	LexTerm : •[ LexPattern ] «;»
	LexTerm : •{ LexPattern } «;»
	LexTerm : •( LexPattern ) «;»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	regDefId -> 23
	LexTerm -> 46
	. -> 26
	char_lit -> 27
	[ -> 28
	{ -> 29
	( -> 30


S25{
	LexAlt : LexTerm• «;»
	LexAlt : LexTerm• «.»
	LexAlt : LexTerm• «char_lit»
	LexAlt : LexTerm• «regDefId»
	LexAlt : LexTerm• «[»
	LexAlt : LexTerm• «{»
	LexAlt : LexTerm• «(»
	LexAlt : LexTerm• «|»
}
Transitions:


S26{
	LexTerm : .• «;»
	LexTerm : .• «.»
	LexTerm : .• «char_lit»
	LexTerm : .• «regDefId»
	LexTerm : .• «[»
	LexTerm : .• «{»
	LexTerm : .• «(»
	LexTerm : .• «|»
}
Transitions:


S27{
	LexTerm : char_lit• «;»
	LexTerm : char_lit •- char_lit «;»
	LexTerm : char_lit• «.»
	LexTerm : char_lit •- char_lit «.»
	LexTerm : char_lit• «char_lit»
	LexTerm : char_lit •- char_lit «char_lit»
	LexTerm : char_lit• «regDefId»
	LexTerm : char_lit •- char_lit «regDefId»
	LexTerm : char_lit• «[»
	LexTerm : char_lit •- char_lit «[»
	LexTerm : char_lit• «{»
	LexTerm : char_lit •- char_lit «{»
	LexTerm : char_lit• «(»
	LexTerm : char_lit •- char_lit «(»
	LexTerm : char_lit• «|»
	LexTerm : char_lit •- char_lit «|»
}
Transitions:
	- -> 47


S28{
	LexTerm : [ •LexPattern ] «;»
	LexTerm : [ •LexPattern ] «.»
	LexTerm : [ •LexPattern ] «char_lit»
	LexTerm : [ •LexPattern ] «regDefId»
	LexTerm : [ •LexPattern ] «[»
	LexTerm : [ •LexPattern ] «{»
	LexTerm : [ •LexPattern ] «(»
	LexTerm : [ •LexPattern ] «|»
	LexPattern : •LexAlt «]»
	LexPattern : •LexPattern | LexAlt «]»
	LexAlt : •LexTerm «]»
	LexAlt : •LexAlt LexTerm «]»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «]»
	LexTerm : •char_lit «]»
	LexTerm : •char_lit - char_lit «]»
	LexTerm : •regDefId «]»
	LexTerm : •[ LexPattern ] «]»
	LexTerm : •{ LexPattern } «]»
	LexTerm : •( LexPattern ) «]»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	LexPattern -> 48
	regDefId -> 49
	LexTerm -> 51
	[ -> 54
	{ -> 55
	LexAlt -> 50
	. -> 52
	char_lit -> 53
	( -> 56


S29{
	LexTerm : { •LexPattern } «;»
	LexTerm : { •LexPattern } «.»
	LexTerm : { •LexPattern } «char_lit»
	LexTerm : { •LexPattern } «regDefId»
	LexTerm : { •LexPattern } «[»
	LexTerm : { •LexPattern } «{»
	LexTerm : { •LexPattern } «(»
	LexTerm : { •LexPattern } «|»
	LexPattern : •LexAlt «}»
	LexPattern : •LexPattern | LexAlt «}»
	LexAlt : •LexTerm «}»
	LexAlt : •LexAlt LexTerm «}»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «}»
	LexTerm : •char_lit «}»
	LexTerm : •char_lit - char_lit «}»
	LexTerm : •regDefId «}»
	LexTerm : •[ LexPattern ] «}»
	LexTerm : •{ LexPattern } «}»
	LexTerm : •( LexPattern ) «}»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	LexTerm -> 60
	char_lit -> 62
	( -> 65
	LexPattern -> 57
	regDefId -> 58
	LexAlt -> 59
	. -> 61
	[ -> 63
	{ -> 64


S30{
	LexTerm : ( •LexPattern ) «;»
	LexTerm : ( •LexPattern ) «.»
	LexTerm : ( •LexPattern ) «char_lit»
	LexTerm : ( •LexPattern ) «regDefId»
	LexTerm : ( •LexPattern ) «[»
	LexTerm : ( •LexPattern ) «{»
	LexTerm : ( •LexPattern ) «(»
	LexTerm : ( •LexPattern ) «|»
	LexPattern : •LexAlt «)»
	LexPattern : •LexPattern | LexAlt «)»
	LexAlt : •LexTerm «)»
	LexAlt : •LexAlt LexTerm «)»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «)»
	LexTerm : •char_lit «)»
	LexTerm : •char_lit - char_lit «)»
	LexTerm : •regDefId «)»
	LexTerm : •[ LexPattern ] «)»
	LexTerm : •{ LexPattern } «)»
	LexTerm : •( LexPattern ) «)»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	regDefId -> 67
	LexAlt -> 68
	char_lit -> 71
	{ -> 73
	LexPattern -> 66
	LexTerm -> 69
	. -> 70
	[ -> 72
	( -> 74


S31{
	LexProduction : regDefId : LexPattern •; «actionLit»
	LexProduction : regDefId : LexPattern •; «prodId»
	LexProduction : regDefId : LexPattern •; «$»
	LexProduction : regDefId : LexPattern •; «tokId»
	LexProduction : regDefId : LexPattern •; «regDefId»
	LexProduction : regDefId : LexPattern •; «ignoredTokId»
	LexPattern : LexPattern •| LexAlt «;»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	; -> 75
	| -> 45


S32{
	LexProduction : ignoredTokId : LexPattern •; «actionLit»
	LexProduction : ignoredTokId : LexPattern •; «prodId»
	LexProduction : ignoredTokId : LexPattern •; «$»
	LexProduction : ignoredTokId : LexPattern •; «tokId»
	LexProduction : ignoredTokId : LexPattern •; «regDefId»
	LexProduction : ignoredTokId : LexPattern •; «ignoredTokId»
	LexPattern : LexPattern •| LexAlt «;»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	; -> 76
	| -> 45


S33{
	SyntaxTerm : tokId• «;»
	SyntaxTerm : tokId• «actionLit»
	SyntaxTerm : tokId• «prodId»
	SyntaxTerm : tokId• «tokId»
	SyntaxTerm : tokId• «stringLit»
	SyntaxTerm : tokId• «(»
	SyntaxTerm : tokId• «[»
	SyntaxTerm : tokId• «{»
	SyntaxTerm : tokId• «|»
}
Transitions:


S34{
	SyntaxTerm : [ •SyntaxExpression ] «;»
	SyntaxTerm : [ •SyntaxExpression ] «actionLit»
	SyntaxTerm : [ •SyntaxExpression ] «prodId»
	SyntaxTerm : [ •SyntaxExpression ] «tokId»
	SyntaxTerm : [ •SyntaxExpression ] «stringLit»
	SyntaxTerm : [ •SyntaxExpression ] «(»
	SyntaxTerm : [ •SyntaxExpression ] «[»
	SyntaxTerm : [ •SyntaxExpression ] «{»
	SyntaxTerm : [ •SyntaxExpression ] «|»
	SyntaxExpression : •SyntaxBody «]»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «]»
	SyntaxBody : •SyntaxTerms «]»
	SyntaxBody : •SyntaxTerms actionLit «]»
	SyntaxBody : •error «]»
	SyntaxBody : •error SyntaxTerms «]»
	SyntaxBody : •error SyntaxTerms actionLit «]»
	SyntaxExpression : •SyntaxBody «|»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «|»
	SyntaxTerms : •SyntaxTerm «]»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «]»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerm : •prodId «]»
	SyntaxTerm : •tokId «]»
	SyntaxTerm : •stringLit «]»
	SyntaxTerm : •( SyntaxExpression ) «]»
	SyntaxTerm : •[ SyntaxExpression ] «]»
	SyntaxTerm : •{ SyntaxExpression } «]»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	tokId -> 77
	[ -> 78
	prodId -> 81
	SyntaxExpression -> 82
	SyntaxTerms -> 84
	SyntaxTerm -> 86
	stringLit -> 87
	{ -> 79
	( -> 80
	SyntaxBody -> 83
	error -> 85


S35{
	SyntaxTerm : { •SyntaxExpression } «;»
	SyntaxTerm : { •SyntaxExpression } «actionLit»
	SyntaxTerm : { •SyntaxExpression } «prodId»
	SyntaxTerm : { •SyntaxExpression } «tokId»
	SyntaxTerm : { •SyntaxExpression } «stringLit»
	SyntaxTerm : { •SyntaxExpression } «(»
	SyntaxTerm : { •SyntaxExpression } «[»
	SyntaxTerm : { •SyntaxExpression } «{»
	SyntaxTerm : { •SyntaxExpression } «|»
	SyntaxExpression : •SyntaxBody «}»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «}»
	SyntaxBody : •SyntaxTerms «}»
	SyntaxBody : •SyntaxTerms actionLit «}»
	SyntaxBody : •error «}»
	SyntaxBody : •error SyntaxTerms «}»
	SyntaxBody : •error SyntaxTerms actionLit «}»
	SyntaxExpression : •SyntaxBody «|»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «|»
	SyntaxTerms : •SyntaxTerm «}»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «}»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerm : •prodId «}»
	SyntaxTerm : •tokId «}»
	SyntaxTerm : •stringLit «}»
	SyntaxTerm : •( SyntaxExpression ) «}»
	SyntaxTerm : •[ SyntaxExpression ] «}»
	SyntaxTerm : •{ SyntaxExpression } «}»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	[ -> 89
	SyntaxBody -> 94
	SyntaxTerms -> 95
	error -> 96
	SyntaxTerm -> 97
	stringLit -> 98
	tokId -> 88
	{ -> 90
	( -> 91
	prodId -> 92
	SyntaxExpression -> 93


S36{
	SyntaxTerm : ( •SyntaxExpression ) «;»
	SyntaxTerm : ( •SyntaxExpression ) «actionLit»
	SyntaxTerm : ( •SyntaxExpression ) «prodId»
	SyntaxTerm : ( •SyntaxExpression ) «tokId»
	SyntaxTerm : ( •SyntaxExpression ) «stringLit»
	SyntaxTerm : ( •SyntaxExpression ) «(»
	SyntaxTerm : ( •SyntaxExpression ) «[»
	SyntaxTerm : ( •SyntaxExpression ) «{»
	SyntaxTerm : ( •SyntaxExpression ) «|»
	SyntaxExpression : •SyntaxBody «)»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «)»
	SyntaxBody : •SyntaxTerms «)»
	SyntaxBody : •SyntaxTerms actionLit «)»
	SyntaxBody : •error «)»
	SyntaxBody : •error SyntaxTerms «)»
	SyntaxBody : •error SyntaxTerms actionLit «)»
	SyntaxExpression : •SyntaxBody «|»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «|»
	SyntaxTerms : •SyntaxTerm «)»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «)»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerm : •prodId «)»
	SyntaxTerm : •tokId «)»
	SyntaxTerm : •stringLit «)»
	SyntaxTerm : •( SyntaxExpression ) «)»
	SyntaxTerm : •[ SyntaxExpression ] «)»
	SyntaxTerm : •{ SyntaxExpression } «)»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	[ -> 100
	( -> 102
	SyntaxExpression -> 104
	SyntaxBody -> 105
	error -> 107
	SyntaxTerm -> 108
	stringLit -> 109
	tokId -> 99
	{ -> 101
	prodId -> 103
	SyntaxTerms -> 106


S37{
	SyntaxTerm : prodId• «;»
	SyntaxTerm : prodId• «actionLit»
	SyntaxTerm : prodId• «prodId»
	SyntaxTerm : prodId• «tokId»
	SyntaxTerm : prodId• «stringLit»
	SyntaxTerm : prodId• «(»
	SyntaxTerm : prodId• «[»
	SyntaxTerm : prodId• «{»
	SyntaxTerm : prodId• «|»
}
Transitions:


S38{
	SyntaxProduction : prodId : SyntaxExpression •; «$»
	SyntaxProduction : prodId : SyntaxExpression •; «prodId»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «;»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «|»
}
Transitions:
	; -> 110
	| -> 111


S39{
	SyntaxExpression : SyntaxBody• «;»
	SyntaxExpression : SyntaxBody• «|»
}
Transitions:


S40{
	SyntaxBody : SyntaxTerms• «;»
	SyntaxBody : SyntaxTerms •actionLit «;»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «;»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «actionLit»
	SyntaxBody : SyntaxTerms• «|»
	SyntaxBody : SyntaxTerms •actionLit «|»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «prodId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «tokId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «stringLit»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «(»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «[»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «{»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «|»
	SyntaxTerm : •prodId «;»
	SyntaxTerm : •tokId «;»
	SyntaxTerm : •stringLit «;»
	SyntaxTerm : •( SyntaxExpression ) «;»
	SyntaxTerm : •[ SyntaxExpression ] «;»
	SyntaxTerm : •{ SyntaxExpression } «;»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	tokId -> 33
	[ -> 34
	{ -> 35
	( -> 36
	actionLit -> 112
	prodId -> 37
	SyntaxTerm -> 113
	stringLit -> 43


S41{
	SyntaxBody : error• «;»
	SyntaxBody : error •SyntaxTerms «;»
	SyntaxBody : error •SyntaxTerms actionLit «;»
	SyntaxBody : error• «|»
	SyntaxBody : error •SyntaxTerms «|»
	SyntaxBody : error •SyntaxTerms actionLit «|»
	SyntaxTerms : •SyntaxTerm «;»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «;»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «;»
	SyntaxTerm : •tokId «;»
	SyntaxTerm : •stringLit «;»
	SyntaxTerm : •( SyntaxExpression ) «;»
	SyntaxTerm : •[ SyntaxExpression ] «;»
	SyntaxTerm : •{ SyntaxExpression } «;»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
}
Transitions:
	tokId -> 33
	[ -> 34
	{ -> 35
	( -> 36
	prodId -> 37
	SyntaxTerms -> 114
	SyntaxTerm -> 42
	stringLit -> 43


S42{
	SyntaxTerms : SyntaxTerm• «;»
	SyntaxTerms : SyntaxTerm• «actionLit»
	SyntaxTerms : SyntaxTerm• «prodId»
	SyntaxTerms : SyntaxTerm• «tokId»
	SyntaxTerms : SyntaxTerm• «stringLit»
	SyntaxTerms : SyntaxTerm• «(»
	SyntaxTerms : SyntaxTerm• «[»
	SyntaxTerms : SyntaxTerm• «{»
	SyntaxTerms : SyntaxTerm• «|»
}
Transitions:


S43{
	SyntaxTerm : stringLit• «;»
	SyntaxTerm : stringLit• «actionLit»
	SyntaxTerm : stringLit• «prodId»
	SyntaxTerm : stringLit• «tokId»
	SyntaxTerm : stringLit• «stringLit»
	SyntaxTerm : stringLit• «(»
	SyntaxTerm : stringLit• «[»
	SyntaxTerm : stringLit• «{»
	SyntaxTerm : stringLit• «|»
}
Transitions:


S44{
	LexProduction : tokId : LexPattern ;• «actionLit»
	LexProduction : tokId : LexPattern ;• «prodId»
	LexProduction : tokId : LexPattern ;• «$»
	LexProduction : tokId : LexPattern ;• «tokId»
	LexProduction : tokId : LexPattern ;• «regDefId»
	LexProduction : tokId : LexPattern ;• «ignoredTokId»
}
Transitions:


S45{
	LexPattern : LexPattern | •LexAlt «;»
	LexPattern : LexPattern | •LexAlt «|»
	LexAlt : •LexTerm «;»
	LexAlt : •LexAlt LexTerm «;»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «;»
	LexTerm : •char_lit «;»
	LexTerm : •char_lit - char_lit «;»
	LexTerm : •regDefId «;»
	LexTerm : •[ LexPattern ] «;»
	LexTerm : •{ LexPattern } «;»
	LexTerm : •( LexPattern ) «;»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
}
Transitions:
	regDefId -> 23
	LexAlt -> 115
	LexTerm -> 25
	. -> 26
	char_lit -> 27
	[ -> 28
	{ -> 29
	( -> 30


S46{
	LexAlt : LexAlt LexTerm• «;»
	LexAlt : LexAlt LexTerm• «.»
	LexAlt : LexAlt LexTerm• «char_lit»
	LexAlt : LexAlt LexTerm• «regDefId»
	LexAlt : LexAlt LexTerm• «[»
	LexAlt : LexAlt LexTerm• «{»
	LexAlt : LexAlt LexTerm• «(»
	LexAlt : LexAlt LexTerm• «|»
}
Transitions:


S47{
	LexTerm : char_lit - •char_lit «;»
	LexTerm : char_lit - •char_lit «.»
	LexTerm : char_lit - •char_lit «char_lit»
	LexTerm : char_lit - •char_lit «regDefId»
	LexTerm : char_lit - •char_lit «[»
	LexTerm : char_lit - •char_lit «{»
	LexTerm : char_lit - •char_lit «(»
	LexTerm : char_lit - •char_lit «|»
}
Transitions:
	char_lit -> 116


S48{
	LexTerm : [ LexPattern •] «;»
	LexTerm : [ LexPattern •] «.»
	LexTerm : [ LexPattern •] «char_lit»
	LexTerm : [ LexPattern •] «regDefId»
	LexTerm : [ LexPattern •] «[»
	LexTerm : [ LexPattern •] «{»
	LexTerm : [ LexPattern •] «(»
	LexTerm : [ LexPattern •] «|»
	LexPattern : LexPattern •| LexAlt «]»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	| -> 117
	] -> 118


S49{
	LexTerm : regDefId• «]»
	LexTerm : regDefId• «.»
	LexTerm : regDefId• «char_lit»
	LexTerm : regDefId• «regDefId»
	LexTerm : regDefId• «[»
	LexTerm : regDefId• «{»
	LexTerm : regDefId• «(»
	LexTerm : regDefId• «|»
}
Transitions:


S50{
	LexPattern : LexAlt• «]»
	LexAlt : LexAlt •LexTerm «]»
	LexPattern : LexAlt• «|»
	LexAlt : LexAlt •LexTerm «.»
	LexAlt : LexAlt •LexTerm «char_lit»
	LexAlt : LexAlt •LexTerm «regDefId»
	LexAlt : LexAlt •LexTerm «[»
	LexAlt : LexAlt •LexTerm «{»
	LexAlt : LexAlt •LexTerm «(»
	LexAlt : LexAlt •LexTerm «|»
	LexTerm : •. «]»
	LexTerm : •char_lit «]»
	LexTerm : •char_lit - char_lit «]»
	LexTerm : •regDefId «]»
	LexTerm : •[ LexPattern ] «]»
	LexTerm : •{ LexPattern } «]»
	LexTerm : •( LexPattern ) «]»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	regDefId -> 49
	LexTerm -> 119
	. -> 52
	char_lit -> 53
	[ -> 54
	{ -> 55
	( -> 56


S51{
	LexAlt : LexTerm• «]»
	LexAlt : LexTerm• «.»
	LexAlt : LexTerm• «char_lit»
	LexAlt : LexTerm• «regDefId»
	LexAlt : LexTerm• «[»
	LexAlt : LexTerm• «{»
	LexAlt : LexTerm• «(»
	LexAlt : LexTerm• «|»
}
Transitions:


S52{
	LexTerm : .• «]»
	LexTerm : .• «.»
	LexTerm : .• «char_lit»
	LexTerm : .• «regDefId»
	LexTerm : .• «[»
	LexTerm : .• «{»
	LexTerm : .• «(»
	LexTerm : .• «|»
}
Transitions:


S53{
	LexTerm : char_lit• «]»
	LexTerm : char_lit •- char_lit «]»
	LexTerm : char_lit• «.»
	LexTerm : char_lit •- char_lit «.»
	LexTerm : char_lit• «char_lit»
	LexTerm : char_lit •- char_lit «char_lit»
	LexTerm : char_lit• «regDefId»
	LexTerm : char_lit •- char_lit «regDefId»
	LexTerm : char_lit• «[»
	LexTerm : char_lit •- char_lit «[»
	LexTerm : char_lit• «{»
	LexTerm : char_lit •- char_lit «{»
	LexTerm : char_lit• «(»
	LexTerm : char_lit •- char_lit «(»
	LexTerm : char_lit• «|»
	LexTerm : char_lit •- char_lit «|»
}
Transitions:
	- -> 120


S54{
	LexTerm : [ •LexPattern ] «]»
	LexTerm : [ •LexPattern ] «.»
	LexTerm : [ •LexPattern ] «char_lit»
	LexTerm : [ •LexPattern ] «regDefId»
	LexTerm : [ •LexPattern ] «[»
	LexTerm : [ •LexPattern ] «{»
	LexTerm : [ •LexPattern ] «(»
	LexTerm : [ •LexPattern ] «|»
	LexPattern : •LexAlt «]»
	LexPattern : •LexPattern | LexAlt «]»
	LexAlt : •LexTerm «]»
	LexAlt : •LexAlt LexTerm «]»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «]»
	LexTerm : •char_lit «]»
	LexTerm : •char_lit - char_lit «]»
	LexTerm : •regDefId «]»
	LexTerm : •[ LexPattern ] «]»
	LexTerm : •{ LexPattern } «]»
	LexTerm : •( LexPattern ) «]»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	regDefId -> 49
	LexAlt -> 50
	[ -> 54
	{ -> 55
	( -> 56
	LexPattern -> 121
	LexTerm -> 51
	. -> 52
	char_lit -> 53


S55{
	LexTerm : { •LexPattern } «]»
	LexTerm : { •LexPattern } «.»
	LexTerm : { •LexPattern } «char_lit»
	LexTerm : { •LexPattern } «regDefId»
	LexTerm : { •LexPattern } «[»
	LexTerm : { •LexPattern } «{»
	LexTerm : { •LexPattern } «(»
	LexTerm : { •LexPattern } «|»
	LexPattern : •LexAlt «}»
	LexPattern : •LexPattern | LexAlt «}»
	LexAlt : •LexTerm «}»
	LexAlt : •LexAlt LexTerm «}»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «}»
	LexTerm : •char_lit «}»
	LexTerm : •char_lit - char_lit «}»
	LexTerm : •regDefId «}»
	LexTerm : •[ LexPattern ] «}»
	LexTerm : •{ LexPattern } «}»
	LexTerm : •( LexPattern ) «}»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	LexPattern -> 122
	LexAlt -> 59
	char_lit -> 62
	{ -> 64
	regDefId -> 58
	LexTerm -> 60
	. -> 61
	[ -> 63
	( -> 65


S56{
	LexTerm : ( •LexPattern ) «]»
	LexTerm : ( •LexPattern ) «.»
	LexTerm : ( •LexPattern ) «char_lit»
	LexTerm : ( •LexPattern ) «regDefId»
	LexTerm : ( •LexPattern ) «[»
	LexTerm : ( •LexPattern ) «{»
	LexTerm : ( •LexPattern ) «(»
	LexTerm : ( •LexPattern ) «|»
	LexPattern : •LexAlt «)»
	LexPattern : •LexPattern | LexAlt «)»
	LexAlt : •LexTerm «)»
	LexAlt : •LexAlt LexTerm «)»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «)»
	LexTerm : •char_lit «)»
	LexTerm : •char_lit - char_lit «)»
	LexTerm : •regDefId «)»
	LexTerm : •[ LexPattern ] «)»
	LexTerm : •{ LexPattern } «)»
	LexTerm : •( LexPattern ) «)»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	LexPattern -> 123
	LexAlt -> 68
	char_lit -> 71
	{ -> 73
	regDefId -> 67
	LexTerm -> 69
	. -> 70
	[ -> 72
	( -> 74


S57{
	LexTerm : { LexPattern •} «;»
	LexTerm : { LexPattern •} «.»
	LexTerm : { LexPattern •} «char_lit»
	LexTerm : { LexPattern •} «regDefId»
	LexTerm : { LexPattern •} «[»
	LexTerm : { LexPattern •} «{»
	LexTerm : { LexPattern •} «(»
	LexTerm : { LexPattern •} «|»
	LexPattern : LexPattern •| LexAlt «}»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	| -> 124
	} -> 125


S58{
	LexTerm : regDefId• «}»
	LexTerm : regDefId• «.»
	LexTerm : regDefId• «char_lit»
	LexTerm : regDefId• «regDefId»
	LexTerm : regDefId• «[»
	LexTerm : regDefId• «{»
	LexTerm : regDefId• «(»
	LexTerm : regDefId• «|»
}
Transitions:


S59{
	LexPattern : LexAlt• «}»
	LexAlt : LexAlt •LexTerm «}»
	LexPattern : LexAlt• «|»
	LexAlt : LexAlt •LexTerm «.»
	LexAlt : LexAlt •LexTerm «char_lit»
	LexAlt : LexAlt •LexTerm «regDefId»
	LexAlt : LexAlt •LexTerm «[»
	LexAlt : LexAlt •LexTerm «{»
	LexAlt : LexAlt •LexTerm «(»
	LexAlt : LexAlt •LexTerm «|»
	LexTerm : •. «}»
	LexTerm : •char_lit «}»
	LexTerm : •char_lit - char_lit «}»
	LexTerm : •regDefId «}»
	LexTerm : •[ LexPattern ] «}»
	LexTerm : •{ LexPattern } «}»
	LexTerm : •( LexPattern ) «}»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	regDefId -> 58
	LexTerm -> 126
	. -> 61
	char_lit -> 62
	[ -> 63
	{ -> 64
	( -> 65


S60{
	LexAlt : LexTerm• «}»
	LexAlt : LexTerm• «.»
	LexAlt : LexTerm• «char_lit»
	LexAlt : LexTerm• «regDefId»
	LexAlt : LexTerm• «[»
	LexAlt : LexTerm• «{»
	LexAlt : LexTerm• «(»
	LexAlt : LexTerm• «|»
}
Transitions:


S61{
	LexTerm : .• «}»
	LexTerm : .• «.»
	LexTerm : .• «char_lit»
	LexTerm : .• «regDefId»
	LexTerm : .• «[»
	LexTerm : .• «{»
	LexTerm : .• «(»
	LexTerm : .• «|»
}
Transitions:


S62{
	LexTerm : char_lit• «}»
	LexTerm : char_lit •- char_lit «}»
	LexTerm : char_lit• «.»
	LexTerm : char_lit •- char_lit «.»
	LexTerm : char_lit• «char_lit»
	LexTerm : char_lit •- char_lit «char_lit»
	LexTerm : char_lit• «regDefId»
	LexTerm : char_lit •- char_lit «regDefId»
	LexTerm : char_lit• «[»
	LexTerm : char_lit •- char_lit «[»
	LexTerm : char_lit• «{»
	LexTerm : char_lit •- char_lit «{»
	LexTerm : char_lit• «(»
	LexTerm : char_lit •- char_lit «(»
	LexTerm : char_lit• «|»
	LexTerm : char_lit •- char_lit «|»
}
Transitions:
	- -> 127


S63{
	LexTerm : [ •LexPattern ] «}»
	LexTerm : [ •LexPattern ] «.»
	LexTerm : [ •LexPattern ] «char_lit»
	LexTerm : [ •LexPattern ] «regDefId»
	LexTerm : [ •LexPattern ] «[»
	LexTerm : [ •LexPattern ] «{»
	LexTerm : [ •LexPattern ] «(»
	LexTerm : [ •LexPattern ] «|»
	LexPattern : •LexAlt «]»
	LexPattern : •LexPattern | LexAlt «]»
	LexAlt : •LexTerm «]»
	LexAlt : •LexAlt LexTerm «]»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «]»
	LexTerm : •char_lit «]»
	LexTerm : •char_lit - char_lit «]»
	LexTerm : •regDefId «]»
	LexTerm : •[ LexPattern ] «]»
	LexTerm : •{ LexPattern } «]»
	LexTerm : •( LexPattern ) «]»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	LexAlt -> 50
	{ -> 55
	LexPattern -> 128
	regDefId -> 49
	LexTerm -> 51
	. -> 52
	char_lit -> 53
	[ -> 54
	( -> 56


S64{
	LexTerm : { •LexPattern } «}»
	LexTerm : { •LexPattern } «.»
	LexTerm : { •LexPattern } «char_lit»
	LexTerm : { •LexPattern } «regDefId»
	LexTerm : { •LexPattern } «[»
	LexTerm : { •LexPattern } «{»
	LexTerm : { •LexPattern } «(»
	LexTerm : { •LexPattern } «|»
	LexPattern : •LexAlt «}»
	LexPattern : •LexPattern | LexAlt «}»
	LexAlt : •LexTerm «}»
	LexAlt : •LexAlt LexTerm «}»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «}»
	LexTerm : •char_lit «}»
	LexTerm : •char_lit - char_lit «}»
	LexTerm : •regDefId «}»
	LexTerm : •[ LexPattern ] «}»
	LexTerm : •{ LexPattern } «}»
	LexTerm : •( LexPattern ) «}»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	regDefId -> 58
	LexAlt -> 59
	LexTerm -> 60
	. -> 61
	char_lit -> 62
	[ -> 63
	LexPattern -> 129
	{ -> 64
	( -> 65


S65{
	LexTerm : ( •LexPattern ) «}»
	LexTerm : ( •LexPattern ) «.»
	LexTerm : ( •LexPattern ) «char_lit»
	LexTerm : ( •LexPattern ) «regDefId»
	LexTerm : ( •LexPattern ) «[»
	LexTerm : ( •LexPattern ) «{»
	LexTerm : ( •LexPattern ) «(»
	LexTerm : ( •LexPattern ) «|»
	LexPattern : •LexAlt «)»
	LexPattern : •LexPattern | LexAlt «)»
	LexAlt : •LexTerm «)»
	LexAlt : •LexAlt LexTerm «)»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «)»
	LexTerm : •char_lit «)»
	LexTerm : •char_lit - char_lit «)»
	LexTerm : •regDefId «)»
	LexTerm : •[ LexPattern ] «)»
	LexTerm : •{ LexPattern } «)»
	LexTerm : •( LexPattern ) «)»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	LexPattern -> 130
	LexAlt -> 68
	LexTerm -> 69
	char_lit -> 71
	regDefId -> 67
	. -> 70
	[ -> 72
	{ -> 73
	( -> 74


S66{
	LexTerm : ( LexPattern •) «;»
	LexTerm : ( LexPattern •) «.»
	LexTerm : ( LexPattern •) «char_lit»
	LexTerm : ( LexPattern •) «regDefId»
	LexTerm : ( LexPattern •) «[»
	LexTerm : ( LexPattern •) «{»
	LexTerm : ( LexPattern •) «(»
	LexTerm : ( LexPattern •) «|»
	LexPattern : LexPattern •| LexAlt «)»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	| -> 131
	) -> 132


S67{
	LexTerm : regDefId• «)»
	LexTerm : regDefId• «.»
	LexTerm : regDefId• «char_lit»
	LexTerm : regDefId• «regDefId»
	LexTerm : regDefId• «[»
	LexTerm : regDefId• «{»
	LexTerm : regDefId• «(»
	LexTerm : regDefId• «|»
}
Transitions:


S68{
	LexPattern : LexAlt• «)»
	LexAlt : LexAlt •LexTerm «)»
	LexPattern : LexAlt• «|»
	LexAlt : LexAlt •LexTerm «.»
	LexAlt : LexAlt •LexTerm «char_lit»
	LexAlt : LexAlt •LexTerm «regDefId»
	LexAlt : LexAlt •LexTerm «[»
	LexAlt : LexAlt •LexTerm «{»
	LexAlt : LexAlt •LexTerm «(»
	LexAlt : LexAlt •LexTerm «|»
	LexTerm : •. «)»
	LexTerm : •char_lit «)»
	LexTerm : •char_lit - char_lit «)»
	LexTerm : •regDefId «)»
	LexTerm : •[ LexPattern ] «)»
	LexTerm : •{ LexPattern } «)»
	LexTerm : •( LexPattern ) «)»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	regDefId -> 67
	LexTerm -> 133
	. -> 70
	char_lit -> 71
	[ -> 72
	{ -> 73
	( -> 74


S69{
	LexAlt : LexTerm• «)»
	LexAlt : LexTerm• «.»
	LexAlt : LexTerm• «char_lit»
	LexAlt : LexTerm• «regDefId»
	LexAlt : LexTerm• «[»
	LexAlt : LexTerm• «{»
	LexAlt : LexTerm• «(»
	LexAlt : LexTerm• «|»
}
Transitions:


S70{
	LexTerm : .• «)»
	LexTerm : .• «.»
	LexTerm : .• «char_lit»
	LexTerm : .• «regDefId»
	LexTerm : .• «[»
	LexTerm : .• «{»
	LexTerm : .• «(»
	LexTerm : .• «|»
}
Transitions:


S71{
	LexTerm : char_lit• «)»
	LexTerm : char_lit •- char_lit «)»
	LexTerm : char_lit• «.»
	LexTerm : char_lit •- char_lit «.»
	LexTerm : char_lit• «char_lit»
	LexTerm : char_lit •- char_lit «char_lit»
	LexTerm : char_lit• «regDefId»
	LexTerm : char_lit •- char_lit «regDefId»
	LexTerm : char_lit• «[»
	LexTerm : char_lit •- char_lit «[»
	LexTerm : char_lit• «{»
	LexTerm : char_lit •- char_lit «{»
	LexTerm : char_lit• «(»
	LexTerm : char_lit •- char_lit «(»
	LexTerm : char_lit• «|»
	LexTerm : char_lit •- char_lit «|»
}
Transitions:
	- -> 134


S72{
	LexTerm : [ •LexPattern ] «)»
	LexTerm : [ •LexPattern ] «.»
	LexTerm : [ •LexPattern ] «char_lit»
	LexTerm : [ •LexPattern ] «regDefId»
	LexTerm : [ •LexPattern ] «[»
	LexTerm : [ •LexPattern ] «{»
	LexTerm : [ •LexPattern ] «(»
	LexTerm : [ •LexPattern ] «|»
	LexPattern : •LexAlt «]»
	LexPattern : •LexPattern | LexAlt «]»
	LexAlt : •LexTerm «]»
	LexAlt : •LexAlt LexTerm «]»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «]»
	LexTerm : •char_lit «]»
	LexTerm : •char_lit - char_lit «]»
	LexTerm : •regDefId «]»
	LexTerm : •[ LexPattern ] «]»
	LexTerm : •{ LexPattern } «]»
	LexTerm : •( LexPattern ) «]»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	LexAlt -> 50
	. -> 52
	{ -> 55
	LexPattern -> 135
	regDefId -> 49
	LexTerm -> 51
	char_lit -> 53
	[ -> 54
	( -> 56


S73{
	LexTerm : { •LexPattern } «)»
	LexTerm : { •LexPattern } «.»
	LexTerm : { •LexPattern } «char_lit»
	LexTerm : { •LexPattern } «regDefId»
	LexTerm : { •LexPattern } «[»
	LexTerm : { •LexPattern } «{»
	LexTerm : { •LexPattern } «(»
	LexTerm : { •LexPattern } «|»
	LexPattern : •LexAlt «}»
	LexPattern : •LexPattern | LexAlt «}»
	LexAlt : •LexTerm «}»
	LexAlt : •LexAlt LexTerm «}»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «}»
	LexTerm : •char_lit «}»
	LexTerm : •char_lit - char_lit «}»
	LexTerm : •regDefId «}»
	LexTerm : •[ LexPattern ] «}»
	LexTerm : •{ LexPattern } «}»
	LexTerm : •( LexPattern ) «}»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	LexPattern -> 136
	regDefId -> 58
	char_lit -> 62
	{ -> 64
	LexAlt -> 59
	LexTerm -> 60
	. -> 61
	[ -> 63
	( -> 65


S74{
	LexTerm : ( •LexPattern ) «)»
	LexTerm : ( •LexPattern ) «.»
	LexTerm : ( •LexPattern ) «char_lit»
	LexTerm : ( •LexPattern ) «regDefId»
	LexTerm : ( •LexPattern ) «[»
	LexTerm : ( •LexPattern ) «{»
	LexTerm : ( •LexPattern ) «(»
	LexTerm : ( •LexPattern ) «|»
	LexPattern : •LexAlt «)»
	LexPattern : •LexPattern | LexAlt «)»
	LexAlt : •LexTerm «)»
	LexAlt : •LexAlt LexTerm «)»
	LexPattern : •LexAlt «|»
	LexPattern : •LexPattern | LexAlt «|»
	LexTerm : •. «)»
	LexTerm : •char_lit «)»
	LexTerm : •char_lit - char_lit «)»
	LexTerm : •regDefId «)»
	LexTerm : •[ LexPattern ] «)»
	LexTerm : •{ LexPattern } «)»
	LexTerm : •( LexPattern ) «)»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
}
Transitions:
	LexPattern -> 137
	LexTerm -> 69
	char_lit -> 71
	[ -> 72
	( -> 74
	regDefId -> 67
	LexAlt -> 68
	. -> 70
	{ -> 73


S75{
	LexProduction : regDefId : LexPattern ;• «actionLit»
	LexProduction : regDefId : LexPattern ;• «prodId»
	LexProduction : regDefId : LexPattern ;• «$»
	LexProduction : regDefId : LexPattern ;• «tokId»
	LexProduction : regDefId : LexPattern ;• «regDefId»
	LexProduction : regDefId : LexPattern ;• «ignoredTokId»
}
Transitions:


S76{
	LexProduction : ignoredTokId : LexPattern ;• «actionLit»
	LexProduction : ignoredTokId : LexPattern ;• «prodId»
	LexProduction : ignoredTokId : LexPattern ;• «$»
	LexProduction : ignoredTokId : LexPattern ;• «tokId»
	LexProduction : ignoredTokId : LexPattern ;• «regDefId»
	LexProduction : ignoredTokId : LexPattern ;• «ignoredTokId»
}
Transitions:


S77{
	SyntaxTerm : tokId• «]»
	SyntaxTerm : tokId• «actionLit»
	SyntaxTerm : tokId• «prodId»
	SyntaxTerm : tokId• «tokId»
	SyntaxTerm : tokId• «stringLit»
	SyntaxTerm : tokId• «(»
	SyntaxTerm : tokId• «[»
	SyntaxTerm : tokId• «{»
	SyntaxTerm : tokId• «|»
}
Transitions:


S78{
	SyntaxTerm : [ •SyntaxExpression ] «]»
	SyntaxTerm : [ •SyntaxExpression ] «actionLit»
	SyntaxTerm : [ •SyntaxExpression ] «prodId»
	SyntaxTerm : [ •SyntaxExpression ] «tokId»
	SyntaxTerm : [ •SyntaxExpression ] «stringLit»
	SyntaxTerm : [ •SyntaxExpression ] «(»
	SyntaxTerm : [ •SyntaxExpression ] «[»
	SyntaxTerm : [ •SyntaxExpression ] «{»
	SyntaxTerm : [ •SyntaxExpression ] «|»
	SyntaxExpression : •SyntaxBody «]»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «]»
	SyntaxBody : •SyntaxTerms «]»
	SyntaxBody : •SyntaxTerms actionLit «]»
	SyntaxBody : •error «]»
	SyntaxBody : •error SyntaxTerms «]»
	SyntaxBody : •error SyntaxTerms actionLit «]»
	SyntaxExpression : •SyntaxBody «|»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «|»
	SyntaxTerms : •SyntaxTerm «]»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «]»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerm : •prodId «]»
	SyntaxTerm : •tokId «]»
	SyntaxTerm : •stringLit «]»
	SyntaxTerm : •( SyntaxExpression ) «]»
	SyntaxTerm : •[ SyntaxExpression ] «]»
	SyntaxTerm : •{ SyntaxExpression } «]»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	tokId -> 77
	[ -> 78
	{ -> 79
	( -> 80
	SyntaxBody -> 83
	SyntaxTerms -> 84
	SyntaxTerm -> 86
	prodId -> 81
	SyntaxExpression -> 138
	error -> 85
	stringLit -> 87


S79{
	SyntaxTerm : { •SyntaxExpression } «]»
	SyntaxTerm : { •SyntaxExpression } «actionLit»
	SyntaxTerm : { •SyntaxExpression } «prodId»
	SyntaxTerm : { •SyntaxExpression } «tokId»
	SyntaxTerm : { •SyntaxExpression } «stringLit»
	SyntaxTerm : { •SyntaxExpression } «(»
	SyntaxTerm : { •SyntaxExpression } «[»
	SyntaxTerm : { •SyntaxExpression } «{»
	SyntaxTerm : { •SyntaxExpression } «|»
	SyntaxExpression : •SyntaxBody «}»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «}»
	SyntaxBody : •SyntaxTerms «}»
	SyntaxBody : •SyntaxTerms actionLit «}»
	SyntaxBody : •error «}»
	SyntaxBody : •error SyntaxTerms «}»
	SyntaxBody : •error SyntaxTerms actionLit «}»
	SyntaxExpression : •SyntaxBody «|»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «|»
	SyntaxTerms : •SyntaxTerm «}»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «}»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerm : •prodId «}»
	SyntaxTerm : •tokId «}»
	SyntaxTerm : •stringLit «}»
	SyntaxTerm : •( SyntaxExpression ) «}»
	SyntaxTerm : •[ SyntaxExpression ] «}»
	SyntaxTerm : •{ SyntaxExpression } «}»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	tokId -> 88
	SyntaxExpression -> 139
	SyntaxTerm -> 97
	stringLit -> 98
	[ -> 89
	{ -> 90
	( -> 91
	prodId -> 92
	SyntaxBody -> 94
	SyntaxTerms -> 95
	error -> 96


S80{
	SyntaxTerm : ( •SyntaxExpression ) «]»
	SyntaxTerm : ( •SyntaxExpression ) «actionLit»
	SyntaxTerm : ( •SyntaxExpression ) «prodId»
	SyntaxTerm : ( •SyntaxExpression ) «tokId»
	SyntaxTerm : ( •SyntaxExpression ) «stringLit»
	SyntaxTerm : ( •SyntaxExpression ) «(»
	SyntaxTerm : ( •SyntaxExpression ) «[»
	SyntaxTerm : ( •SyntaxExpression ) «{»
	SyntaxTerm : ( •SyntaxExpression ) «|»
	SyntaxExpression : •SyntaxBody «)»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «)»
	SyntaxBody : •SyntaxTerms «)»
	SyntaxBody : •SyntaxTerms actionLit «)»
	SyntaxBody : •error «)»
	SyntaxBody : •error SyntaxTerms «)»
	SyntaxBody : •error SyntaxTerms actionLit «)»
	SyntaxExpression : •SyntaxBody «|»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «|»
	SyntaxTerms : •SyntaxTerm «)»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «)»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerm : •prodId «)»
	SyntaxTerm : •tokId «)»
	SyntaxTerm : •stringLit «)»
	SyntaxTerm : •( SyntaxExpression ) «)»
	SyntaxTerm : •[ SyntaxExpression ] «)»
	SyntaxTerm : •{ SyntaxExpression } «)»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	{ -> 101
	SyntaxExpression -> 140
	SyntaxTerms -> 106
	SyntaxTerm -> 108
	stringLit -> 109
	tokId -> 99
	[ -> 100
	( -> 102
	prodId -> 103
	SyntaxBody -> 105
	error -> 107


S81{
	SyntaxTerm : prodId• «]»
	SyntaxTerm : prodId• «actionLit»
	SyntaxTerm : prodId• «prodId»
	SyntaxTerm : prodId• «tokId»
	SyntaxTerm : prodId• «stringLit»
	SyntaxTerm : prodId• «(»
	SyntaxTerm : prodId• «[»
	SyntaxTerm : prodId• «{»
	SyntaxTerm : prodId• «|»
}
Transitions:


S82{
	SyntaxTerm : [ SyntaxExpression •] «;»
	SyntaxTerm : [ SyntaxExpression •] «actionLit»
	SyntaxTerm : [ SyntaxExpression •] «prodId»
	SyntaxTerm : [ SyntaxExpression •] «tokId»
	SyntaxTerm : [ SyntaxExpression •] «stringLit»
	SyntaxTerm : [ SyntaxExpression •] «(»
	SyntaxTerm : [ SyntaxExpression •] «[»
	SyntaxTerm : [ SyntaxExpression •] «{»
	SyntaxTerm : [ SyntaxExpression •] «|»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «]»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «|»
}
Transitions:
	| -> 141
	] -> 142


S83{
	SyntaxExpression : SyntaxBody• «]»
	SyntaxExpression : SyntaxBody• «|»
}
Transitions:


S84{
	SyntaxBody : SyntaxTerms• «]»
	SyntaxBody : SyntaxTerms •actionLit «]»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «]»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «actionLit»
	SyntaxBody : SyntaxTerms• «|»
	SyntaxBody : SyntaxTerms •actionLit «|»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «prodId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «tokId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «stringLit»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «(»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «[»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «{»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «|»
	SyntaxTerm : •prodId «]»
	SyntaxTerm : •tokId «]»
	SyntaxTerm : •stringLit «]»
	SyntaxTerm : •( SyntaxExpression ) «]»
	SyntaxTerm : •[ SyntaxExpression ] «]»
	SyntaxTerm : •{ SyntaxExpression } «]»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	tokId -> 77
	[ -> 78
	{ -> 79
	( -> 80
	actionLit -> 143
	prodId -> 81
	SyntaxTerm -> 144
	stringLit -> 87


S85{
	SyntaxBody : error• «]»
	SyntaxBody : error •SyntaxTerms «]»
	SyntaxBody : error •SyntaxTerms actionLit «]»
	SyntaxBody : error• «|»
	SyntaxBody : error •SyntaxTerms «|»
	SyntaxBody : error •SyntaxTerms actionLit «|»
	SyntaxTerms : •SyntaxTerm «]»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «]»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «]»
	SyntaxTerm : •tokId «]»
	SyntaxTerm : •stringLit «]»
	SyntaxTerm : •( SyntaxExpression ) «]»
	SyntaxTerm : •[ SyntaxExpression ] «]»
	SyntaxTerm : •{ SyntaxExpression } «]»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
}
Transitions:
	tokId -> 77
	[ -> 78
	{ -> 79
	( -> 80
	prodId -> 81
	SyntaxTerms -> 145
	SyntaxTerm -> 86
	stringLit -> 87


S86{
	SyntaxTerms : SyntaxTerm• «]»
	SyntaxTerms : SyntaxTerm• «actionLit»
	SyntaxTerms : SyntaxTerm• «prodId»
	SyntaxTerms : SyntaxTerm• «tokId»
	SyntaxTerms : SyntaxTerm• «stringLit»
	SyntaxTerms : SyntaxTerm• «(»
	SyntaxTerms : SyntaxTerm• «[»
	SyntaxTerms : SyntaxTerm• «{»
	SyntaxTerms : SyntaxTerm• «|»
}
Transitions:


S87{
	SyntaxTerm : stringLit• «]»
	SyntaxTerm : stringLit• «actionLit»
	SyntaxTerm : stringLit• «prodId»
	SyntaxTerm : stringLit• «tokId»
	SyntaxTerm : stringLit• «stringLit»
	SyntaxTerm : stringLit• «(»
	SyntaxTerm : stringLit• «[»
	SyntaxTerm : stringLit• «{»
	SyntaxTerm : stringLit• «|»
}
Transitions:


S88{
	SyntaxTerm : tokId• «}»
	SyntaxTerm : tokId• «actionLit»
	SyntaxTerm : tokId• «prodId»
	SyntaxTerm : tokId• «tokId»
	SyntaxTerm : tokId• «stringLit»
	SyntaxTerm : tokId• «(»
	SyntaxTerm : tokId• «[»
	SyntaxTerm : tokId• «{»
	SyntaxTerm : tokId• «|»
}
Transitions:


S89{
	SyntaxTerm : [ •SyntaxExpression ] «}»
	SyntaxTerm : [ •SyntaxExpression ] «actionLit»
	SyntaxTerm : [ •SyntaxExpression ] «prodId»
	SyntaxTerm : [ •SyntaxExpression ] «tokId»
	SyntaxTerm : [ •SyntaxExpression ] «stringLit»
	SyntaxTerm : [ •SyntaxExpression ] «(»
	SyntaxTerm : [ •SyntaxExpression ] «[»
	SyntaxTerm : [ •SyntaxExpression ] «{»
	SyntaxTerm : [ •SyntaxExpression ] «|»
	SyntaxExpression : •SyntaxBody «]»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «]»
	SyntaxBody : •SyntaxTerms «]»
	SyntaxBody : •SyntaxTerms actionLit «]»
	SyntaxBody : •error «]»
	SyntaxBody : •error SyntaxTerms «]»
	SyntaxBody : •error SyntaxTerms actionLit «]»
	SyntaxExpression : •SyntaxBody «|»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «|»
	SyntaxTerms : •SyntaxTerm «]»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «]»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerm : •prodId «]»
	SyntaxTerm : •tokId «]»
	SyntaxTerm : •stringLit «]»
	SyntaxTerm : •( SyntaxExpression ) «]»
	SyntaxTerm : •[ SyntaxExpression ] «]»
	SyntaxTerm : •{ SyntaxExpression } «]»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	tokId -> 77
	[ -> 78
	( -> 80
	SyntaxBody -> 83
	SyntaxTerms -> 84
	error -> 85
	{ -> 79
	prodId -> 81
	SyntaxExpression -> 146
	SyntaxTerm -> 86
	stringLit -> 87


S90{
	SyntaxTerm : { •SyntaxExpression } «}»
	SyntaxTerm : { •SyntaxExpression } «actionLit»
	SyntaxTerm : { •SyntaxExpression } «prodId»
	SyntaxTerm : { •SyntaxExpression } «tokId»
	SyntaxTerm : { •SyntaxExpression } «stringLit»
	SyntaxTerm : { •SyntaxExpression } «(»
	SyntaxTerm : { •SyntaxExpression } «[»
	SyntaxTerm : { •SyntaxExpression } «{»
	SyntaxTerm : { •SyntaxExpression } «|»
	SyntaxExpression : •SyntaxBody «}»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «}»
	SyntaxBody : •SyntaxTerms «}»
	SyntaxBody : •SyntaxTerms actionLit «}»
	SyntaxBody : •error «}»
	SyntaxBody : •error SyntaxTerms «}»
	SyntaxBody : •error SyntaxTerms actionLit «}»
	SyntaxExpression : •SyntaxBody «|»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «|»
	SyntaxTerms : •SyntaxTerm «}»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «}»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerm : •prodId «}»
	SyntaxTerm : •tokId «}»
	SyntaxTerm : •stringLit «}»
	SyntaxTerm : •( SyntaxExpression ) «}»
	SyntaxTerm : •[ SyntaxExpression ] «}»
	SyntaxTerm : •{ SyntaxExpression } «}»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	[ -> 89
	prodId -> 92
	SyntaxBody -> 94
	error -> 96
	SyntaxTerm -> 97
	stringLit -> 98
	tokId -> 88
	{ -> 90
	( -> 91
	SyntaxExpression -> 147
	SyntaxTerms -> 95


S91{
	SyntaxTerm : ( •SyntaxExpression ) «}»
	SyntaxTerm : ( •SyntaxExpression ) «actionLit»
	SyntaxTerm : ( •SyntaxExpression ) «prodId»
	SyntaxTerm : ( •SyntaxExpression ) «tokId»
	SyntaxTerm : ( •SyntaxExpression ) «stringLit»
	SyntaxTerm : ( •SyntaxExpression ) «(»
	SyntaxTerm : ( •SyntaxExpression ) «[»
	SyntaxTerm : ( •SyntaxExpression ) «{»
	SyntaxTerm : ( •SyntaxExpression ) «|»
	SyntaxExpression : •SyntaxBody «)»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «)»
	SyntaxBody : •SyntaxTerms «)»
	SyntaxBody : •SyntaxTerms actionLit «)»
	SyntaxBody : •error «)»
	SyntaxBody : •error SyntaxTerms «)»
	SyntaxBody : •error SyntaxTerms actionLit «)»
	SyntaxExpression : •SyntaxBody «|»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «|»
	SyntaxTerms : •SyntaxTerm «)»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «)»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerm : •prodId «)»
	SyntaxTerm : •tokId «)»
	SyntaxTerm : •stringLit «)»
	SyntaxTerm : •( SyntaxExpression ) «)»
	SyntaxTerm : •[ SyntaxExpression ] «)»
	SyntaxTerm : •{ SyntaxExpression } «)»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	tokId -> 99
	[ -> 100
	( -> 102
	prodId -> 103
	SyntaxExpression -> 148
	error -> 107
	stringLit -> 109
	{ -> 101
	SyntaxBody -> 105
	SyntaxTerms -> 106
	SyntaxTerm -> 108


S92{
	SyntaxTerm : prodId• «}»
	SyntaxTerm : prodId• «actionLit»
	SyntaxTerm : prodId• «prodId»
	SyntaxTerm : prodId• «tokId»
	SyntaxTerm : prodId• «stringLit»
	SyntaxTerm : prodId• «(»
	SyntaxTerm : prodId• «[»
	SyntaxTerm : prodId• «{»
	SyntaxTerm : prodId• «|»
}
Transitions:


S93{
	SyntaxTerm : { SyntaxExpression •} «;»
	SyntaxTerm : { SyntaxExpression •} «actionLit»
	SyntaxTerm : { SyntaxExpression •} «prodId»
	SyntaxTerm : { SyntaxExpression •} «tokId»
	SyntaxTerm : { SyntaxExpression •} «stringLit»
	SyntaxTerm : { SyntaxExpression •} «(»
	SyntaxTerm : { SyntaxExpression •} «[»
	SyntaxTerm : { SyntaxExpression •} «{»
	SyntaxTerm : { SyntaxExpression •} «|»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «}»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «|»
}
Transitions:
	| -> 149
	} -> 150


S94{
	SyntaxExpression : SyntaxBody• «}»
	SyntaxExpression : SyntaxBody• «|»
}
Transitions:


S95{
	SyntaxBody : SyntaxTerms• «}»
	SyntaxBody : SyntaxTerms •actionLit «}»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «}»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «actionLit»
	SyntaxBody : SyntaxTerms• «|»
	SyntaxBody : SyntaxTerms •actionLit «|»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «prodId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «tokId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «stringLit»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «(»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «[»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «{»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «|»
	SyntaxTerm : •prodId «}»
	SyntaxTerm : •tokId «}»
	SyntaxTerm : •stringLit «}»
	SyntaxTerm : •( SyntaxExpression ) «}»
	SyntaxTerm : •[ SyntaxExpression ] «}»
	SyntaxTerm : •{ SyntaxExpression } «}»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	tokId -> 88
	[ -> 89
	{ -> 90
	( -> 91
	actionLit -> 151
	prodId -> 92
	SyntaxTerm -> 152
	stringLit -> 98


S96{
	SyntaxBody : error• «}»
	SyntaxBody : error •SyntaxTerms «}»
	SyntaxBody : error •SyntaxTerms actionLit «}»
	SyntaxBody : error• «|»
	SyntaxBody : error •SyntaxTerms «|»
	SyntaxBody : error •SyntaxTerms actionLit «|»
	SyntaxTerms : •SyntaxTerm «}»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «}»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «}»
	SyntaxTerm : •tokId «}»
	SyntaxTerm : •stringLit «}»
	SyntaxTerm : •( SyntaxExpression ) «}»
	SyntaxTerm : •[ SyntaxExpression ] «}»
	SyntaxTerm : •{ SyntaxExpression } «}»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
}
Transitions:
	tokId -> 88
	[ -> 89
	{ -> 90
	( -> 91
	prodId -> 92
	SyntaxTerms -> 153
	SyntaxTerm -> 97
	stringLit -> 98


S97{
	SyntaxTerms : SyntaxTerm• «}»
	SyntaxTerms : SyntaxTerm• «actionLit»
	SyntaxTerms : SyntaxTerm• «prodId»
	SyntaxTerms : SyntaxTerm• «tokId»
	SyntaxTerms : SyntaxTerm• «stringLit»
	SyntaxTerms : SyntaxTerm• «(»
	SyntaxTerms : SyntaxTerm• «[»
	SyntaxTerms : SyntaxTerm• «{»
	SyntaxTerms : SyntaxTerm• «|»
}
Transitions:


S98{
	SyntaxTerm : stringLit• «}»
	SyntaxTerm : stringLit• «actionLit»
	SyntaxTerm : stringLit• «prodId»
	SyntaxTerm : stringLit• «tokId»
	SyntaxTerm : stringLit• «stringLit»
	SyntaxTerm : stringLit• «(»
	SyntaxTerm : stringLit• «[»
	SyntaxTerm : stringLit• «{»
	SyntaxTerm : stringLit• «|»
}
Transitions:


S99{
	SyntaxTerm : tokId• «)»
	SyntaxTerm : tokId• «actionLit»
	SyntaxTerm : tokId• «prodId»
	SyntaxTerm : tokId• «tokId»
	SyntaxTerm : tokId• «stringLit»
	SyntaxTerm : tokId• «(»
	SyntaxTerm : tokId• «[»
	SyntaxTerm : tokId• «{»
	SyntaxTerm : tokId• «|»
}
Transitions:


S100{
	SyntaxTerm : [ •SyntaxExpression ] «)»
	SyntaxTerm : [ •SyntaxExpression ] «actionLit»
	SyntaxTerm : [ •SyntaxExpression ] «prodId»
	SyntaxTerm : [ •SyntaxExpression ] «tokId»
	SyntaxTerm : [ •SyntaxExpression ] «stringLit»
	SyntaxTerm : [ •SyntaxExpression ] «(»
	SyntaxTerm : [ •SyntaxExpression ] «[»
	SyntaxTerm : [ •SyntaxExpression ] «{»
	SyntaxTerm : [ •SyntaxExpression ] «|»
	SyntaxExpression : •SyntaxBody «]»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «]»
	SyntaxBody : •SyntaxTerms «]»
	SyntaxBody : •SyntaxTerms actionLit «]»
	SyntaxBody : •error «]»
	SyntaxBody : •error SyntaxTerms «]»
	SyntaxBody : •error SyntaxTerms actionLit «]»
	SyntaxExpression : •SyntaxBody «|»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «|»
	SyntaxTerms : •SyntaxTerm «]»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «]»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerm : •prodId «]»
	SyntaxTerm : •tokId «]»
	SyntaxTerm : •stringLit «]»
	SyntaxTerm : •( SyntaxExpression ) «]»
	SyntaxTerm : •[ SyntaxExpression ] «]»
	SyntaxTerm : •{ SyntaxExpression } «]»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	tokId -> 77
	[ -> 78
	SyntaxBody -> 83
	error -> 85
	stringLit -> 87
	{ -> 79
	( -> 80
	prodId -> 81
	SyntaxExpression -> 154
	SyntaxTerms -> 84
	SyntaxTerm -> 86


S101{
	SyntaxTerm : { •SyntaxExpression } «)»
	SyntaxTerm : { •SyntaxExpression } «actionLit»
	SyntaxTerm : { •SyntaxExpression } «prodId»
	SyntaxTerm : { •SyntaxExpression } «tokId»
	SyntaxTerm : { •SyntaxExpression } «stringLit»
	SyntaxTerm : { •SyntaxExpression } «(»
	SyntaxTerm : { •SyntaxExpression } «[»
	SyntaxTerm : { •SyntaxExpression } «{»
	SyntaxTerm : { •SyntaxExpression } «|»
	SyntaxExpression : •SyntaxBody «}»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «}»
	SyntaxBody : •SyntaxTerms «}»
	SyntaxBody : •SyntaxTerms actionLit «}»
	SyntaxBody : •error «}»
	SyntaxBody : •error SyntaxTerms «}»
	SyntaxBody : •error SyntaxTerms actionLit «}»
	SyntaxExpression : •SyntaxBody «|»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «|»
	SyntaxTerms : •SyntaxTerm «}»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «}»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerm : •prodId «}»
	SyntaxTerm : •tokId «}»
	SyntaxTerm : •stringLit «}»
	SyntaxTerm : •( SyntaxExpression ) «}»
	SyntaxTerm : •[ SyntaxExpression ] «}»
	SyntaxTerm : •{ SyntaxExpression } «}»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	tokId -> 88
	[ -> 89
	{ -> 90
	( -> 91
	SyntaxExpression -> 155
	error -> 96
	SyntaxTerm -> 97
	prodId -> 92
	SyntaxBody -> 94
	SyntaxTerms -> 95
	stringLit -> 98


S102{
	SyntaxTerm : ( •SyntaxExpression ) «)»
	SyntaxTerm : ( •SyntaxExpression ) «actionLit»
	SyntaxTerm : ( •SyntaxExpression ) «prodId»
	SyntaxTerm : ( •SyntaxExpression ) «tokId»
	SyntaxTerm : ( •SyntaxExpression ) «stringLit»
	SyntaxTerm : ( •SyntaxExpression ) «(»
	SyntaxTerm : ( •SyntaxExpression ) «[»
	SyntaxTerm : ( •SyntaxExpression ) «{»
	SyntaxTerm : ( •SyntaxExpression ) «|»
	SyntaxExpression : •SyntaxBody «)»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «)»
	SyntaxBody : •SyntaxTerms «)»
	SyntaxBody : •SyntaxTerms actionLit «)»
	SyntaxBody : •error «)»
	SyntaxBody : •error SyntaxTerms «)»
	SyntaxBody : •error SyntaxTerms actionLit «)»
	SyntaxExpression : •SyntaxBody «|»
	SyntaxExpression : •SyntaxExpression | SyntaxBody «|»
	SyntaxTerms : •SyntaxTerm «)»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «)»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerm : •prodId «)»
	SyntaxTerm : •tokId «)»
	SyntaxTerm : •stringLit «)»
	SyntaxTerm : •( SyntaxExpression ) «)»
	SyntaxTerm : •[ SyntaxExpression ] «)»
	SyntaxTerm : •{ SyntaxExpression } «)»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	tokId -> 99
	( -> 102
	prodId -> 103
	SyntaxBody -> 105
	error -> 107
	SyntaxTerm -> 108
	[ -> 100
	{ -> 101
	SyntaxExpression -> 156
	SyntaxTerms -> 106
	stringLit -> 109


S103{
	SyntaxTerm : prodId• «)»
	SyntaxTerm : prodId• «actionLit»
	SyntaxTerm : prodId• «prodId»
	SyntaxTerm : prodId• «tokId»
	SyntaxTerm : prodId• «stringLit»
	SyntaxTerm : prodId• «(»
	SyntaxTerm : prodId• «[»
	SyntaxTerm : prodId• «{»
	SyntaxTerm : prodId• «|»
}
Transitions:


S104{
	SyntaxTerm : ( SyntaxExpression •) «;»
	SyntaxTerm : ( SyntaxExpression •) «actionLit»
	SyntaxTerm : ( SyntaxExpression •) «prodId»
	SyntaxTerm : ( SyntaxExpression •) «tokId»
	SyntaxTerm : ( SyntaxExpression •) «stringLit»
	SyntaxTerm : ( SyntaxExpression •) «(»
	SyntaxTerm : ( SyntaxExpression •) «[»
	SyntaxTerm : ( SyntaxExpression •) «{»
	SyntaxTerm : ( SyntaxExpression •) «|»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «)»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «|»
}
Transitions:
	| -> 157
	) -> 158


S105{
	SyntaxExpression : SyntaxBody• «)»
	SyntaxExpression : SyntaxBody• «|»
}
Transitions:


S106{
	SyntaxBody : SyntaxTerms• «)»
	SyntaxBody : SyntaxTerms •actionLit «)»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «)»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «actionLit»
	SyntaxBody : SyntaxTerms• «|»
	SyntaxBody : SyntaxTerms •actionLit «|»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «prodId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «tokId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «stringLit»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «(»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «[»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «{»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «|»
	SyntaxTerm : •prodId «)»
	SyntaxTerm : •tokId «)»
	SyntaxTerm : •stringLit «)»
	SyntaxTerm : •( SyntaxExpression ) «)»
	SyntaxTerm : •[ SyntaxExpression ] «)»
	SyntaxTerm : •{ SyntaxExpression } «)»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
}
Transitions:
	tokId -> 99
	[ -> 100
	{ -> 101
	( -> 102
	actionLit -> 159
	prodId -> 103
	SyntaxTerm -> 160
	stringLit -> 109


S107{
	SyntaxBody : error• «)»
	SyntaxBody : error •SyntaxTerms «)»
	SyntaxBody : error •SyntaxTerms actionLit «)»
	SyntaxBody : error• «|»
	SyntaxBody : error •SyntaxTerms «|»
	SyntaxBody : error •SyntaxTerms actionLit «|»
	SyntaxTerms : •SyntaxTerm «)»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «)»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «)»
	SyntaxTerm : •tokId «)»
	SyntaxTerm : •stringLit «)»
	SyntaxTerm : •( SyntaxExpression ) «)»
	SyntaxTerm : •[ SyntaxExpression ] «)»
	SyntaxTerm : •{ SyntaxExpression } «)»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
}
Transitions:
	tokId -> 99
	[ -> 100
	{ -> 101
	( -> 102
	prodId -> 103
	SyntaxTerms -> 161
	SyntaxTerm -> 108
	stringLit -> 109


S108{
	SyntaxTerms : SyntaxTerm• «)»
	SyntaxTerms : SyntaxTerm• «actionLit»
	SyntaxTerms : SyntaxTerm• «prodId»
	SyntaxTerms : SyntaxTerm• «tokId»
	SyntaxTerms : SyntaxTerm• «stringLit»
	SyntaxTerms : SyntaxTerm• «(»
	SyntaxTerms : SyntaxTerm• «[»
	SyntaxTerms : SyntaxTerm• «{»
	SyntaxTerms : SyntaxTerm• «|»
}
Transitions:


S109{
	SyntaxTerm : stringLit• «)»
	SyntaxTerm : stringLit• «actionLit»
	SyntaxTerm : stringLit• «prodId»
	SyntaxTerm : stringLit• «tokId»
	SyntaxTerm : stringLit• «stringLit»
	SyntaxTerm : stringLit• «(»
	SyntaxTerm : stringLit• «[»
	SyntaxTerm : stringLit• «{»
	SyntaxTerm : stringLit• «|»
}
Transitions:


S110{
	SyntaxProduction : prodId : SyntaxExpression ;• «$»
	SyntaxProduction : prodId : SyntaxExpression ;• «prodId»
}
Transitions:


S111{
	SyntaxExpression : SyntaxExpression | •SyntaxBody «;»
	SyntaxExpression : SyntaxExpression | •SyntaxBody «|»
	SyntaxBody : •SyntaxTerms «;»
	SyntaxBody : •SyntaxTerms actionLit «;»
	SyntaxBody : •error «;»
	SyntaxBody : •error SyntaxTerms «;»
	SyntaxBody : •error SyntaxTerms actionLit «;»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerms : •SyntaxTerm «;»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «;»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «;»
	SyntaxTerm : •tokId «;»
	SyntaxTerm : •stringLit «;»
	SyntaxTerm : •( SyntaxExpression ) «;»
	SyntaxTerm : •[ SyntaxExpression ] «;»
	SyntaxTerm : •{ SyntaxExpression } «;»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
}
Transitions:
	tokId -> 33
	{ -> 35
	( -> 36
	prodId -> 37
	SyntaxBody -> 162
	error -> 41
	[ -> 34
	SyntaxTerms -> 40
	SyntaxTerm -> 42
	stringLit -> 43


S112{
	SyntaxBody : SyntaxTerms actionLit• «;»
	SyntaxBody : SyntaxTerms actionLit• «|»
}
Transitions:


S113{
	SyntaxTerms : SyntaxTerms SyntaxTerm• «;»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «actionLit»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «prodId»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «tokId»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «stringLit»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «(»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «[»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «{»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «|»
}
Transitions:


S114{
	SyntaxBody : error SyntaxTerms• «;»
	SyntaxBody : error SyntaxTerms •actionLit «;»
	SyntaxBody : error SyntaxTerms• «|»
	SyntaxBody : error SyntaxTerms •actionLit «|»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «;»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «actionLit»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «|»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «prodId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «tokId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «stringLit»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «(»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «[»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «{»
	SyntaxTerm : •prodId «;»
	SyntaxTerm : •tokId «;»
	SyntaxTerm : •stringLit «;»
	SyntaxTerm : •( SyntaxExpression ) «;»
	SyntaxTerm : •[ SyntaxExpression ] «;»
	SyntaxTerm : •{ SyntaxExpression } «;»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
}
Transitions:
	tokId -> 33
	[ -> 34
	{ -> 35
	( -> 36
	actionLit -> 163
	prodId -> 37
	SyntaxTerm -> 113
	stringLit -> 43


S115{
	LexPattern : LexPattern | LexAlt• «;»
	LexPattern : LexPattern | LexAlt• «|»
	LexAlt : LexAlt •LexTerm «;»
	LexAlt : LexAlt •LexTerm «|»
	LexAlt : LexAlt •LexTerm «.»
	LexAlt : LexAlt •LexTerm «char_lit»
	LexAlt : LexAlt •LexTerm «regDefId»
	LexAlt : LexAlt •LexTerm «[»
	LexAlt : LexAlt •LexTerm «{»
	LexAlt : LexAlt •LexTerm «(»
	LexTerm : •. «;»
	LexTerm : •char_lit «;»
	LexTerm : •char_lit - char_lit «;»
	LexTerm : •regDefId «;»
	LexTerm : •[ LexPattern ] «;»
	LexTerm : •{ LexPattern } «;»
	LexTerm : •( LexPattern ) «;»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
}
Transitions:
	regDefId -> 23
	LexTerm -> 46
	. -> 26
	char_lit -> 27
	[ -> 28
	{ -> 29
	( -> 30


S116{
	LexTerm : char_lit - char_lit• «;»
	LexTerm : char_lit - char_lit• «.»
	LexTerm : char_lit - char_lit• «char_lit»
	LexTerm : char_lit - char_lit• «regDefId»
	LexTerm : char_lit - char_lit• «[»
	LexTerm : char_lit - char_lit• «{»
	LexTerm : char_lit - char_lit• «(»
	LexTerm : char_lit - char_lit• «|»
}
Transitions:


S117{
	LexPattern : LexPattern | •LexAlt «]»
	LexPattern : LexPattern | •LexAlt «|»
	LexAlt : •LexTerm «]»
	LexAlt : •LexAlt LexTerm «]»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «]»
	LexTerm : •char_lit «]»
	LexTerm : •char_lit - char_lit «]»
	LexTerm : •regDefId «]»
	LexTerm : •[ LexPattern ] «]»
	LexTerm : •{ LexPattern } «]»
	LexTerm : •( LexPattern ) «]»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
}
Transitions:
	regDefId -> 49
	LexAlt -> 164
	LexTerm -> 51
	. -> 52
	char_lit -> 53
	[ -> 54
	{ -> 55
	( -> 56


S118{
	LexTerm : [ LexPattern ]• «;»
	LexTerm : [ LexPattern ]• «.»
	LexTerm : [ LexPattern ]• «char_lit»
	LexTerm : [ LexPattern ]• «regDefId»
	LexTerm : [ LexPattern ]• «[»
	LexTerm : [ LexPattern ]• «{»
	LexTerm : [ LexPattern ]• «(»
	LexTerm : [ LexPattern ]• «|»
}
Transitions:


S119{
	LexAlt : LexAlt LexTerm• «]»
	LexAlt : LexAlt LexTerm• «.»
	LexAlt : LexAlt LexTerm• «char_lit»
	LexAlt : LexAlt LexTerm• «regDefId»
	LexAlt : LexAlt LexTerm• «[»
	LexAlt : LexAlt LexTerm• «{»
	LexAlt : LexAlt LexTerm• «(»
	LexAlt : LexAlt LexTerm• «|»
}
Transitions:


S120{
	LexTerm : char_lit - •char_lit «]»
	LexTerm : char_lit - •char_lit «.»
	LexTerm : char_lit - •char_lit «char_lit»
	LexTerm : char_lit - •char_lit «regDefId»
	LexTerm : char_lit - •char_lit «[»
	LexTerm : char_lit - •char_lit «{»
	LexTerm : char_lit - •char_lit «(»
	LexTerm : char_lit - •char_lit «|»
}
Transitions:
	char_lit -> 165


S121{
	LexTerm : [ LexPattern •] «]»
	LexTerm : [ LexPattern •] «.»
	LexTerm : [ LexPattern •] «char_lit»
	LexTerm : [ LexPattern •] «regDefId»
	LexTerm : [ LexPattern •] «[»
	LexTerm : [ LexPattern •] «{»
	LexTerm : [ LexPattern •] «(»
	LexTerm : [ LexPattern •] «|»
	LexPattern : LexPattern •| LexAlt «]»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	| -> 117
	] -> 166


S122{
	LexTerm : { LexPattern •} «]»
	LexTerm : { LexPattern •} «.»
	LexTerm : { LexPattern •} «char_lit»
	LexTerm : { LexPattern •} «regDefId»
	LexTerm : { LexPattern •} «[»
	LexTerm : { LexPattern •} «{»
	LexTerm : { LexPattern •} «(»
	LexTerm : { LexPattern •} «|»
	LexPattern : LexPattern •| LexAlt «}»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	| -> 124
	} -> 167


S123{
	LexTerm : ( LexPattern •) «]»
	LexTerm : ( LexPattern •) «.»
	LexTerm : ( LexPattern •) «char_lit»
	LexTerm : ( LexPattern •) «regDefId»
	LexTerm : ( LexPattern •) «[»
	LexTerm : ( LexPattern •) «{»
	LexTerm : ( LexPattern •) «(»
	LexTerm : ( LexPattern •) «|»
	LexPattern : LexPattern •| LexAlt «)»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	| -> 131
	) -> 168


S124{
	LexPattern : LexPattern | •LexAlt «}»
	LexPattern : LexPattern | •LexAlt «|»
	LexAlt : •LexTerm «}»
	LexAlt : •LexAlt LexTerm «}»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «}»
	LexTerm : •char_lit «}»
	LexTerm : •char_lit - char_lit «}»
	LexTerm : •regDefId «}»
	LexTerm : •[ LexPattern ] «}»
	LexTerm : •{ LexPattern } «}»
	LexTerm : •( LexPattern ) «}»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
}
Transitions:
	regDefId -> 58
	LexAlt -> 169
	LexTerm -> 60
	. -> 61
	char_lit -> 62
	[ -> 63
	{ -> 64
	( -> 65


S125{
	LexTerm : { LexPattern }• «;»
	LexTerm : { LexPattern }• «.»
	LexTerm : { LexPattern }• «char_lit»
	LexTerm : { LexPattern }• «regDefId»
	LexTerm : { LexPattern }• «[»
	LexTerm : { LexPattern }• «{»
	LexTerm : { LexPattern }• «(»
	LexTerm : { LexPattern }• «|»
}
Transitions:


S126{
	LexAlt : LexAlt LexTerm• «}»
	LexAlt : LexAlt LexTerm• «.»
	LexAlt : LexAlt LexTerm• «char_lit»
	LexAlt : LexAlt LexTerm• «regDefId»
	LexAlt : LexAlt LexTerm• «[»
	LexAlt : LexAlt LexTerm• «{»
	LexAlt : LexAlt LexTerm• «(»
	LexAlt : LexAlt LexTerm• «|»
}
Transitions:


S127{
	LexTerm : char_lit - •char_lit «}»
	LexTerm : char_lit - •char_lit «.»
	LexTerm : char_lit - •char_lit «char_lit»
	LexTerm : char_lit - •char_lit «regDefId»
	LexTerm : char_lit - •char_lit «[»
	LexTerm : char_lit - •char_lit «{»
	LexTerm : char_lit - •char_lit «(»
	LexTerm : char_lit - •char_lit «|»
}
Transitions:
	char_lit -> 170


S128{
	LexTerm : [ LexPattern •] «}»
	LexTerm : [ LexPattern •] «.»
	LexTerm : [ LexPattern •] «char_lit»
	LexTerm : [ LexPattern •] «regDefId»
	LexTerm : [ LexPattern •] «[»
	LexTerm : [ LexPattern •] «{»
	LexTerm : [ LexPattern •] «(»
	LexTerm : [ LexPattern •] «|»
	LexPattern : LexPattern •| LexAlt «]»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	| -> 117
	] -> 171


S129{
	LexTerm : { LexPattern •} «}»
	LexTerm : { LexPattern •} «.»
	LexTerm : { LexPattern •} «char_lit»
	LexTerm : { LexPattern •} «regDefId»
	LexTerm : { LexPattern •} «[»
	LexTerm : { LexPattern •} «{»
	LexTerm : { LexPattern •} «(»
	LexTerm : { LexPattern •} «|»
	LexPattern : LexPattern •| LexAlt «}»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	| -> 124
	} -> 172


S130{
	LexTerm : ( LexPattern •) «}»
	LexTerm : ( LexPattern •) «.»
	LexTerm : ( LexPattern •) «char_lit»
	LexTerm : ( LexPattern •) «regDefId»
	LexTerm : ( LexPattern •) «[»
	LexTerm : ( LexPattern •) «{»
	LexTerm : ( LexPattern •) «(»
	LexTerm : ( LexPattern •) «|»
	LexPattern : LexPattern •| LexAlt «)»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	| -> 131
	) -> 173


S131{
	LexPattern : LexPattern | •LexAlt «)»
	LexPattern : LexPattern | •LexAlt «|»
	LexAlt : •LexTerm «)»
	LexAlt : •LexAlt LexTerm «)»
	LexAlt : •LexTerm «|»
	LexAlt : •LexAlt LexTerm «|»
	LexTerm : •. «)»
	LexTerm : •char_lit «)»
	LexTerm : •char_lit - char_lit «)»
	LexTerm : •regDefId «)»
	LexTerm : •[ LexPattern ] «)»
	LexTerm : •{ LexPattern } «)»
	LexTerm : •( LexPattern ) «)»
	LexAlt : •LexTerm «.»
	LexAlt : •LexTerm «char_lit»
	LexAlt : •LexTerm «regDefId»
	LexAlt : •LexTerm «[»
	LexAlt : •LexTerm «{»
	LexAlt : •LexTerm «(»
	LexAlt : •LexAlt LexTerm «.»
	LexAlt : •LexAlt LexTerm «char_lit»
	LexAlt : •LexAlt LexTerm «regDefId»
	LexAlt : •LexAlt LexTerm «[»
	LexAlt : •LexAlt LexTerm «{»
	LexAlt : •LexAlt LexTerm «(»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
}
Transitions:
	regDefId -> 67
	LexAlt -> 174
	LexTerm -> 69
	. -> 70
	char_lit -> 71
	[ -> 72
	{ -> 73
	( -> 74


S132{
	LexTerm : ( LexPattern )• «;»
	LexTerm : ( LexPattern )• «.»
	LexTerm : ( LexPattern )• «char_lit»
	LexTerm : ( LexPattern )• «regDefId»
	LexTerm : ( LexPattern )• «[»
	LexTerm : ( LexPattern )• «{»
	LexTerm : ( LexPattern )• «(»
	LexTerm : ( LexPattern )• «|»
}
Transitions:


S133{
	LexAlt : LexAlt LexTerm• «)»
	LexAlt : LexAlt LexTerm• «.»
	LexAlt : LexAlt LexTerm• «char_lit»
	LexAlt : LexAlt LexTerm• «regDefId»
	LexAlt : LexAlt LexTerm• «[»
	LexAlt : LexAlt LexTerm• «{»
	LexAlt : LexAlt LexTerm• «(»
	LexAlt : LexAlt LexTerm• «|»
}
Transitions:


S134{
	LexTerm : char_lit - •char_lit «)»
	LexTerm : char_lit - •char_lit «.»
	LexTerm : char_lit - •char_lit «char_lit»
	LexTerm : char_lit - •char_lit «regDefId»
	LexTerm : char_lit - •char_lit «[»
	LexTerm : char_lit - •char_lit «{»
	LexTerm : char_lit - •char_lit «(»
	LexTerm : char_lit - •char_lit «|»
}
Transitions:
	char_lit -> 175


S135{
	LexTerm : [ LexPattern •] «)»
	LexTerm : [ LexPattern •] «.»
	LexTerm : [ LexPattern •] «char_lit»
	LexTerm : [ LexPattern •] «regDefId»
	LexTerm : [ LexPattern •] «[»
	LexTerm : [ LexPattern •] «{»
	LexTerm : [ LexPattern •] «(»
	LexTerm : [ LexPattern •] «|»
	LexPattern : LexPattern •| LexAlt «]»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	| -> 117
	] -> 176


S136{
	LexTerm : { LexPattern •} «)»
	LexTerm : { LexPattern •} «.»
	LexTerm : { LexPattern •} «char_lit»
	LexTerm : { LexPattern •} «regDefId»
	LexTerm : { LexPattern •} «[»
	LexTerm : { LexPattern •} «{»
	LexTerm : { LexPattern •} «(»
	LexTerm : { LexPattern •} «|»
	LexPattern : LexPattern •| LexAlt «}»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	| -> 124
	} -> 177


S137{
	LexTerm : ( LexPattern •) «)»
	LexTerm : ( LexPattern •) «.»
	LexTerm : ( LexPattern •) «char_lit»
	LexTerm : ( LexPattern •) «regDefId»
	LexTerm : ( LexPattern •) «[»
	LexTerm : ( LexPattern •) «{»
	LexTerm : ( LexPattern •) «(»
	LexTerm : ( LexPattern •) «|»
	LexPattern : LexPattern •| LexAlt «)»
	LexPattern : LexPattern •| LexAlt «|»
}
Transitions:
	| -> 131
	) -> 178


S138{
	SyntaxTerm : [ SyntaxExpression •] «]»
	SyntaxTerm : [ SyntaxExpression •] «actionLit»
	SyntaxTerm : [ SyntaxExpression •] «prodId»
	SyntaxTerm : [ SyntaxExpression •] «tokId»
	SyntaxTerm : [ SyntaxExpression •] «stringLit»
	SyntaxTerm : [ SyntaxExpression •] «(»
	SyntaxTerm : [ SyntaxExpression •] «[»
	SyntaxTerm : [ SyntaxExpression •] «{»
	SyntaxTerm : [ SyntaxExpression •] «|»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «]»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «|»
}
Transitions:
	| -> 141
	] -> 179


S139{
	SyntaxTerm : { SyntaxExpression •} «]»
	SyntaxTerm : { SyntaxExpression •} «actionLit»
	SyntaxTerm : { SyntaxExpression •} «prodId»
	SyntaxTerm : { SyntaxExpression •} «tokId»
	SyntaxTerm : { SyntaxExpression •} «stringLit»
	SyntaxTerm : { SyntaxExpression •} «(»
	SyntaxTerm : { SyntaxExpression •} «[»
	SyntaxTerm : { SyntaxExpression •} «{»
	SyntaxTerm : { SyntaxExpression •} «|»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «}»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «|»
}
Transitions:
	| -> 149
	} -> 180


S140{
	SyntaxTerm : ( SyntaxExpression •) «]»
	SyntaxTerm : ( SyntaxExpression •) «actionLit»
	SyntaxTerm : ( SyntaxExpression •) «prodId»
	SyntaxTerm : ( SyntaxExpression •) «tokId»
	SyntaxTerm : ( SyntaxExpression •) «stringLit»
	SyntaxTerm : ( SyntaxExpression •) «(»
	SyntaxTerm : ( SyntaxExpression •) «[»
	SyntaxTerm : ( SyntaxExpression •) «{»
	SyntaxTerm : ( SyntaxExpression •) «|»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «)»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «|»
}
Transitions:
	| -> 157
	) -> 181


S141{
	SyntaxExpression : SyntaxExpression | •SyntaxBody «]»
	SyntaxExpression : SyntaxExpression | •SyntaxBody «|»
	SyntaxBody : •SyntaxTerms «]»
	SyntaxBody : •SyntaxTerms actionLit «]»
	SyntaxBody : •error «]»
	SyntaxBody : •error SyntaxTerms «]»
	SyntaxBody : •error SyntaxTerms actionLit «]»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerms : •SyntaxTerm «]»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «]»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «]»
	SyntaxTerm : •tokId «]»
	SyntaxTerm : •stringLit «]»
	SyntaxTerm : •( SyntaxExpression ) «]»
	SyntaxTerm : •[ SyntaxExpression ] «]»
	SyntaxTerm : •{ SyntaxExpression } «]»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
}
Transitions:
	tokId -> 77
	[ -> 78
	SyntaxTerm -> 86
	{ -> 79
	( -> 80
	prodId -> 81
	SyntaxBody -> 182
	SyntaxTerms -> 84
	error -> 85
	stringLit -> 87


S142{
	SyntaxTerm : [ SyntaxExpression ]• «;»
	SyntaxTerm : [ SyntaxExpression ]• «actionLit»
	SyntaxTerm : [ SyntaxExpression ]• «prodId»
	SyntaxTerm : [ SyntaxExpression ]• «tokId»
	SyntaxTerm : [ SyntaxExpression ]• «stringLit»
	SyntaxTerm : [ SyntaxExpression ]• «(»
	SyntaxTerm : [ SyntaxExpression ]• «[»
	SyntaxTerm : [ SyntaxExpression ]• «{»
	SyntaxTerm : [ SyntaxExpression ]• «|»
}
Transitions:


S143{
	SyntaxBody : SyntaxTerms actionLit• «]»
	SyntaxBody : SyntaxTerms actionLit• «|»
}
Transitions:


S144{
	SyntaxTerms : SyntaxTerms SyntaxTerm• «]»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «actionLit»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «prodId»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «tokId»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «stringLit»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «(»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «[»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «{»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «|»
}
Transitions:


S145{
	SyntaxBody : error SyntaxTerms• «]»
	SyntaxBody : error SyntaxTerms •actionLit «]»
	SyntaxBody : error SyntaxTerms• «|»
	SyntaxBody : error SyntaxTerms •actionLit «|»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «]»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «actionLit»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «|»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «prodId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «tokId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «stringLit»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «(»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «[»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «{»
	SyntaxTerm : •prodId «]»
	SyntaxTerm : •tokId «]»
	SyntaxTerm : •stringLit «]»
	SyntaxTerm : •( SyntaxExpression ) «]»
	SyntaxTerm : •[ SyntaxExpression ] «]»
	SyntaxTerm : •{ SyntaxExpression } «]»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
}
Transitions:
	tokId -> 77
	[ -> 78
	{ -> 79
	( -> 80
	actionLit -> 183
	prodId -> 81
	SyntaxTerm -> 144
	stringLit -> 87


S146{
	SyntaxTerm : [ SyntaxExpression •] «}»
	SyntaxTerm : [ SyntaxExpression •] «actionLit»
	SyntaxTerm : [ SyntaxExpression •] «prodId»
	SyntaxTerm : [ SyntaxExpression •] «tokId»
	SyntaxTerm : [ SyntaxExpression •] «stringLit»
	SyntaxTerm : [ SyntaxExpression •] «(»
	SyntaxTerm : [ SyntaxExpression •] «[»
	SyntaxTerm : [ SyntaxExpression •] «{»
	SyntaxTerm : [ SyntaxExpression •] «|»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «]»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «|»
}
Transitions:
	| -> 141
	] -> 184


S147{
	SyntaxTerm : { SyntaxExpression •} «}»
	SyntaxTerm : { SyntaxExpression •} «actionLit»
	SyntaxTerm : { SyntaxExpression •} «prodId»
	SyntaxTerm : { SyntaxExpression •} «tokId»
	SyntaxTerm : { SyntaxExpression •} «stringLit»
	SyntaxTerm : { SyntaxExpression •} «(»
	SyntaxTerm : { SyntaxExpression •} «[»
	SyntaxTerm : { SyntaxExpression •} «{»
	SyntaxTerm : { SyntaxExpression •} «|»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «}»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «|»
}
Transitions:
	| -> 149
	} -> 185


S148{
	SyntaxTerm : ( SyntaxExpression •) «}»
	SyntaxTerm : ( SyntaxExpression •) «actionLit»
	SyntaxTerm : ( SyntaxExpression •) «prodId»
	SyntaxTerm : ( SyntaxExpression •) «tokId»
	SyntaxTerm : ( SyntaxExpression •) «stringLit»
	SyntaxTerm : ( SyntaxExpression •) «(»
	SyntaxTerm : ( SyntaxExpression •) «[»
	SyntaxTerm : ( SyntaxExpression •) «{»
	SyntaxTerm : ( SyntaxExpression •) «|»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «)»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «|»
}
Transitions:
	| -> 157
	) -> 186


S149{
	SyntaxExpression : SyntaxExpression | •SyntaxBody «}»
	SyntaxExpression : SyntaxExpression | •SyntaxBody «|»
	SyntaxBody : •SyntaxTerms «}»
	SyntaxBody : •SyntaxTerms actionLit «}»
	SyntaxBody : •error «}»
	SyntaxBody : •error SyntaxTerms «}»
	SyntaxBody : •error SyntaxTerms actionLit «}»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerms : •SyntaxTerm «}»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «}»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «}»
	SyntaxTerm : •tokId «}»
	SyntaxTerm : •stringLit «}»
	SyntaxTerm : •( SyntaxExpression ) «}»
	SyntaxTerm : •[ SyntaxExpression ] «}»
	SyntaxTerm : •{ SyntaxExpression } «}»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
}
Transitions:
	tokId -> 88
	{ -> 90
	SyntaxBody -> 187
	SyntaxTerms -> 95
	error -> 96
	SyntaxTerm -> 97
	stringLit -> 98
	[ -> 89
	( -> 91
	prodId -> 92


S150{
	SyntaxTerm : { SyntaxExpression }• «;»
	SyntaxTerm : { SyntaxExpression }• «actionLit»
	SyntaxTerm : { SyntaxExpression }• «prodId»
	SyntaxTerm : { SyntaxExpression }• «tokId»
	SyntaxTerm : { SyntaxExpression }• «stringLit»
	SyntaxTerm : { SyntaxExpression }• «(»
	SyntaxTerm : { SyntaxExpression }• «[»
	SyntaxTerm : { SyntaxExpression }• «{»
	SyntaxTerm : { SyntaxExpression }• «|»
}
Transitions:


S151{
	SyntaxBody : SyntaxTerms actionLit• «}»
	SyntaxBody : SyntaxTerms actionLit• «|»
}
Transitions:


S152{
	SyntaxTerms : SyntaxTerms SyntaxTerm• «}»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «actionLit»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «prodId»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «tokId»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «stringLit»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «(»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «[»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «{»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «|»
}
Transitions:


S153{
	SyntaxBody : error SyntaxTerms• «}»
	SyntaxBody : error SyntaxTerms •actionLit «}»
	SyntaxBody : error SyntaxTerms• «|»
	SyntaxBody : error SyntaxTerms •actionLit «|»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «}»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «actionLit»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «|»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «prodId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «tokId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «stringLit»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «(»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «[»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «{»
	SyntaxTerm : •prodId «}»
	SyntaxTerm : •tokId «}»
	SyntaxTerm : •stringLit «}»
	SyntaxTerm : •( SyntaxExpression ) «}»
	SyntaxTerm : •[ SyntaxExpression ] «}»
	SyntaxTerm : •{ SyntaxExpression } «}»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
}
Transitions:
	tokId -> 88
	[ -> 89
	{ -> 90
	( -> 91
	actionLit -> 188
	prodId -> 92
	SyntaxTerm -> 152
	stringLit -> 98


S154{
	SyntaxTerm : [ SyntaxExpression •] «)»
	SyntaxTerm : [ SyntaxExpression •] «actionLit»
	SyntaxTerm : [ SyntaxExpression •] «prodId»
	SyntaxTerm : [ SyntaxExpression •] «tokId»
	SyntaxTerm : [ SyntaxExpression •] «stringLit»
	SyntaxTerm : [ SyntaxExpression •] «(»
	SyntaxTerm : [ SyntaxExpression •] «[»
	SyntaxTerm : [ SyntaxExpression •] «{»
	SyntaxTerm : [ SyntaxExpression •] «|»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «]»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «|»
}
Transitions:
	| -> 141
	] -> 189


S155{
	SyntaxTerm : { SyntaxExpression •} «)»
	SyntaxTerm : { SyntaxExpression •} «actionLit»
	SyntaxTerm : { SyntaxExpression •} «prodId»
	SyntaxTerm : { SyntaxExpression •} «tokId»
	SyntaxTerm : { SyntaxExpression •} «stringLit»
	SyntaxTerm : { SyntaxExpression •} «(»
	SyntaxTerm : { SyntaxExpression •} «[»
	SyntaxTerm : { SyntaxExpression •} «{»
	SyntaxTerm : { SyntaxExpression •} «|»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «}»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «|»
}
Transitions:
	| -> 149
	} -> 190


S156{
	SyntaxTerm : ( SyntaxExpression •) «)»
	SyntaxTerm : ( SyntaxExpression •) «actionLit»
	SyntaxTerm : ( SyntaxExpression •) «prodId»
	SyntaxTerm : ( SyntaxExpression •) «tokId»
	SyntaxTerm : ( SyntaxExpression •) «stringLit»
	SyntaxTerm : ( SyntaxExpression •) «(»
	SyntaxTerm : ( SyntaxExpression •) «[»
	SyntaxTerm : ( SyntaxExpression •) «{»
	SyntaxTerm : ( SyntaxExpression •) «|»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «)»
	SyntaxExpression : SyntaxExpression •| SyntaxBody «|»
}
Transitions:
	| -> 157
	) -> 191


S157{
	SyntaxExpression : SyntaxExpression | •SyntaxBody «)»
	SyntaxExpression : SyntaxExpression | •SyntaxBody «|»
	SyntaxBody : •SyntaxTerms «)»
	SyntaxBody : •SyntaxTerms actionLit «)»
	SyntaxBody : •error «)»
	SyntaxBody : •error SyntaxTerms «)»
	SyntaxBody : •error SyntaxTerms actionLit «)»
	SyntaxBody : •SyntaxTerms «|»
	SyntaxBody : •SyntaxTerms actionLit «|»
	SyntaxBody : •error «|»
	SyntaxBody : •error SyntaxTerms «|»
	SyntaxBody : •error SyntaxTerms actionLit «|»
	SyntaxTerms : •SyntaxTerm «)»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «)»
	SyntaxTerms : •SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «actionLit»
	SyntaxTerms : •SyntaxTerm «|»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «|»
	SyntaxTerm : •prodId «)»
	SyntaxTerm : •tokId «)»
	SyntaxTerm : •stringLit «)»
	SyntaxTerm : •( SyntaxExpression ) «)»
	SyntaxTerm : •[ SyntaxExpression ] «)»
	SyntaxTerm : •{ SyntaxExpression } «)»
	SyntaxTerms : •SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerm «{»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «prodId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «tokId»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «stringLit»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «(»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «[»
	SyntaxTerms : •SyntaxTerms SyntaxTerm «{»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
}
Transitions:
	[ -> 100
	( -> 102
	prodId -> 103
	SyntaxTerms -> 106
	error -> 107
	SyntaxTerm -> 108
	tokId -> 99
	{ -> 101
	SyntaxBody -> 192
	stringLit -> 109


S158{
	SyntaxTerm : ( SyntaxExpression )• «;»
	SyntaxTerm : ( SyntaxExpression )• «actionLit»
	SyntaxTerm : ( SyntaxExpression )• «prodId»
	SyntaxTerm : ( SyntaxExpression )• «tokId»
	SyntaxTerm : ( SyntaxExpression )• «stringLit»
	SyntaxTerm : ( SyntaxExpression )• «(»
	SyntaxTerm : ( SyntaxExpression )• «[»
	SyntaxTerm : ( SyntaxExpression )• «{»
	SyntaxTerm : ( SyntaxExpression )• «|»
}
Transitions:


S159{
	SyntaxBody : SyntaxTerms actionLit• «)»
	SyntaxBody : SyntaxTerms actionLit• «|»
}
Transitions:


S160{
	SyntaxTerms : SyntaxTerms SyntaxTerm• «)»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «actionLit»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «prodId»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «tokId»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «stringLit»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «(»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «[»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «{»
	SyntaxTerms : SyntaxTerms SyntaxTerm• «|»
}
Transitions:


S161{
	SyntaxBody : error SyntaxTerms• «)»
	SyntaxBody : error SyntaxTerms •actionLit «)»
	SyntaxBody : error SyntaxTerms• «|»
	SyntaxBody : error SyntaxTerms •actionLit «|»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «)»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «actionLit»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «|»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «prodId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «tokId»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «stringLit»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «(»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «[»
	SyntaxTerms : SyntaxTerms •SyntaxTerm «{»
	SyntaxTerm : •prodId «)»
	SyntaxTerm : •tokId «)»
	SyntaxTerm : •stringLit «)»
	SyntaxTerm : •( SyntaxExpression ) «)»
	SyntaxTerm : •[ SyntaxExpression ] «)»
	SyntaxTerm : •{ SyntaxExpression } «)»
	SyntaxTerm : •prodId «actionLit»
	SyntaxTerm : •tokId «actionLit»
	SyntaxTerm : •stringLit «actionLit»
	SyntaxTerm : •( SyntaxExpression ) «actionLit»
	SyntaxTerm : •[ SyntaxExpression ] «actionLit»
	SyntaxTerm : •{ SyntaxExpression } «actionLit»
	SyntaxTerm : •prodId «|»
	SyntaxTerm : •tokId «|»
	SyntaxTerm : •stringLit «|»
	SyntaxTerm : •( SyntaxExpression ) «|»
	SyntaxTerm : •[ SyntaxExpression ] «|»
	SyntaxTerm : •{ SyntaxExpression } «|»
	SyntaxTerm : •prodId «prodId»
	SyntaxTerm : •tokId «prodId»
	SyntaxTerm : •stringLit «prodId»
	SyntaxTerm : •( SyntaxExpression ) «prodId»
	SyntaxTerm : •[ SyntaxExpression ] «prodId»
	SyntaxTerm : •{ SyntaxExpression } «prodId»
	SyntaxTerm : •prodId «tokId»
	SyntaxTerm : •tokId «tokId»
	SyntaxTerm : •stringLit «tokId»
	SyntaxTerm : •( SyntaxExpression ) «tokId»
	SyntaxTerm : •[ SyntaxExpression ] «tokId»
	SyntaxTerm : •{ SyntaxExpression } «tokId»
	SyntaxTerm : •prodId «stringLit»
	SyntaxTerm : •tokId «stringLit»
	SyntaxTerm : •stringLit «stringLit»
	SyntaxTerm : •( SyntaxExpression ) «stringLit»
	SyntaxTerm : •[ SyntaxExpression ] «stringLit»
	SyntaxTerm : •{ SyntaxExpression } «stringLit»
	SyntaxTerm : •prodId «(»
	SyntaxTerm : •tokId «(»
	SyntaxTerm : •stringLit «(»
	SyntaxTerm : •( SyntaxExpression ) «(»
	SyntaxTerm : •[ SyntaxExpression ] «(»
	SyntaxTerm : •{ SyntaxExpression } «(»
	SyntaxTerm : •prodId «[»
	SyntaxTerm : •tokId «[»
	SyntaxTerm : •stringLit «[»
	SyntaxTerm : •( SyntaxExpression ) «[»
	SyntaxTerm : •[ SyntaxExpression ] «[»
	SyntaxTerm : •{ SyntaxExpression } «[»
	SyntaxTerm : •prodId «{»
	SyntaxTerm : •tokId «{»
	SyntaxTerm : •stringLit «{»
	SyntaxTerm : •( SyntaxExpression ) «{»
	SyntaxTerm : •[ SyntaxExpression ] «{»
	SyntaxTerm : •{ SyntaxExpression } «{»
}
Transitions:
	tokId -> 99
	[ -> 100
	{ -> 101
	( -> 102
	actionLit -> 193
	prodId -> 103
	SyntaxTerm -> 160
	stringLit -> 109


S162{
	SyntaxExpression : SyntaxExpression | SyntaxBody• «;»
	SyntaxExpression : SyntaxExpression | SyntaxBody• «|»
}
Transitions:


S163{
	SyntaxBody : error SyntaxTerms actionLit• «;»
	SyntaxBody : error SyntaxTerms actionLit• «|»
}
Transitions:


S164{
	LexPattern : LexPattern | LexAlt• «]»
	LexPattern : LexPattern | LexAlt• «|»
	LexAlt : LexAlt •LexTerm «]»
	LexAlt : LexAlt •LexTerm «|»
	LexAlt : LexAlt •LexTerm «.»
	LexAlt : LexAlt •LexTerm «char_lit»
	LexAlt : LexAlt •LexTerm «regDefId»
	LexAlt : LexAlt •LexTerm «[»
	LexAlt : LexAlt •LexTerm «{»
	LexAlt : LexAlt •LexTerm «(»
	LexTerm : •. «]»
	LexTerm : •char_lit «]»
	LexTerm : •char_lit - char_lit «]»
	LexTerm : •regDefId «]»
	LexTerm : •[ LexPattern ] «]»
	LexTerm : •{ LexPattern } «]»
	LexTerm : •( LexPattern ) «]»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
}
Transitions:
	regDefId -> 49
	LexTerm -> 119
	. -> 52
	char_lit -> 53
	[ -> 54
	{ -> 55
	( -> 56


S165{
	LexTerm : char_lit - char_lit• «]»
	LexTerm : char_lit - char_lit• «.»
	LexTerm : char_lit - char_lit• «char_lit»
	LexTerm : char_lit - char_lit• «regDefId»
	LexTerm : char_lit - char_lit• «[»
	LexTerm : char_lit - char_lit• «{»
	LexTerm : char_lit - char_lit• «(»
	LexTerm : char_lit - char_lit• «|»
}
Transitions:


S166{
	LexTerm : [ LexPattern ]• «]»
	LexTerm : [ LexPattern ]• «.»
	LexTerm : [ LexPattern ]• «char_lit»
	LexTerm : [ LexPattern ]• «regDefId»
	LexTerm : [ LexPattern ]• «[»
	LexTerm : [ LexPattern ]• «{»
	LexTerm : [ LexPattern ]• «(»
	LexTerm : [ LexPattern ]• «|»
}
Transitions:


S167{
	LexTerm : { LexPattern }• «]»
	LexTerm : { LexPattern }• «.»
	LexTerm : { LexPattern }• «char_lit»
	LexTerm : { LexPattern }• «regDefId»
	LexTerm : { LexPattern }• «[»
	LexTerm : { LexPattern }• «{»
	LexTerm : { LexPattern }• «(»
	LexTerm : { LexPattern }• «|»
}
Transitions:


S168{
	LexTerm : ( LexPattern )• «]»
	LexTerm : ( LexPattern )• «.»
	LexTerm : ( LexPattern )• «char_lit»
	LexTerm : ( LexPattern )• «regDefId»
	LexTerm : ( LexPattern )• «[»
	LexTerm : ( LexPattern )• «{»
	LexTerm : ( LexPattern )• «(»
	LexTerm : ( LexPattern )• «|»
}
Transitions:


S169{
	LexPattern : LexPattern | LexAlt• «}»
	LexPattern : LexPattern | LexAlt• «|»
	LexAlt : LexAlt •LexTerm «}»
	LexAlt : LexAlt •LexTerm «|»
	LexAlt : LexAlt •LexTerm «.»
	LexAlt : LexAlt •LexTerm «char_lit»
	LexAlt : LexAlt •LexTerm «regDefId»
	LexAlt : LexAlt •LexTerm «[»
	LexAlt : LexAlt •LexTerm «{»
	LexAlt : LexAlt •LexTerm «(»
	LexTerm : •. «}»
	LexTerm : •char_lit «}»
	LexTerm : •char_lit - char_lit «}»
	LexTerm : •regDefId «}»
	LexTerm : •[ LexPattern ] «}»
	LexTerm : •{ LexPattern } «}»
	LexTerm : •( LexPattern ) «}»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
}
Transitions:
	regDefId -> 58
	LexTerm -> 126
	. -> 61
	char_lit -> 62
	[ -> 63
	{ -> 64
	( -> 65


S170{
	LexTerm : char_lit - char_lit• «}»
	LexTerm : char_lit - char_lit• «.»
	LexTerm : char_lit - char_lit• «char_lit»
	LexTerm : char_lit - char_lit• «regDefId»
	LexTerm : char_lit - char_lit• «[»
	LexTerm : char_lit - char_lit• «{»
	LexTerm : char_lit - char_lit• «(»
	LexTerm : char_lit - char_lit• «|»
}
Transitions:


S171{
	LexTerm : [ LexPattern ]• «}»
	LexTerm : [ LexPattern ]• «.»
	LexTerm : [ LexPattern ]• «char_lit»
	LexTerm : [ LexPattern ]• «regDefId»
	LexTerm : [ LexPattern ]• «[»
	LexTerm : [ LexPattern ]• «{»
	LexTerm : [ LexPattern ]• «(»
	LexTerm : [ LexPattern ]• «|»
}
Transitions:


S172{
	LexTerm : { LexPattern }• «}»
	LexTerm : { LexPattern }• «.»
	LexTerm : { LexPattern }• «char_lit»
	LexTerm : { LexPattern }• «regDefId»
	LexTerm : { LexPattern }• «[»
	LexTerm : { LexPattern }• «{»
	LexTerm : { LexPattern }• «(»
	LexTerm : { LexPattern }• «|»
}
Transitions:


S173{
	LexTerm : ( LexPattern )• «}»
	LexTerm : ( LexPattern )• «.»
	LexTerm : ( LexPattern )• «char_lit»
	LexTerm : ( LexPattern )• «regDefId»
	LexTerm : ( LexPattern )• «[»
	LexTerm : ( LexPattern )• «{»
	LexTerm : ( LexPattern )• «(»
	LexTerm : ( LexPattern )• «|»
}
Transitions:


S174{
	LexPattern : LexPattern | LexAlt• «)»
	LexPattern : LexPattern | LexAlt• «|»
	LexAlt : LexAlt •LexTerm «)»
	LexAlt : LexAlt •LexTerm «|»
	LexAlt : LexAlt •LexTerm «.»
	LexAlt : LexAlt •LexTerm «char_lit»
	LexAlt : LexAlt •LexTerm «regDefId»
	LexAlt : LexAlt •LexTerm «[»
	LexAlt : LexAlt •LexTerm «{»
	LexAlt : LexAlt •LexTerm «(»
	LexTerm : •. «)»
	LexTerm : •char_lit «)»
	LexTerm : •char_lit - char_lit «)»
	LexTerm : •regDefId «)»
	LexTerm : •[ LexPattern ] «)»
	LexTerm : •{ LexPattern } «)»
	LexTerm : •( LexPattern ) «)»
	LexTerm : •. «|»
	LexTerm : •char_lit «|»
	LexTerm : •char_lit - char_lit «|»
	LexTerm : •regDefId «|»
	LexTerm : •[ LexPattern ] «|»
	LexTerm : •{ LexPattern } «|»
	LexTerm : •( LexPattern ) «|»
	LexTerm : •. «.»
	LexTerm : •char_lit «.»
	LexTerm : •char_lit - char_lit «.»
	LexTerm : •regDefId «.»
	LexTerm : •[ LexPattern ] «.»
	LexTerm : •{ LexPattern } «.»
	LexTerm : •( LexPattern ) «.»
	LexTerm : •. «char_lit»
	LexTerm : •char_lit «char_lit»
	LexTerm : •char_lit - char_lit «char_lit»
	LexTerm : •regDefId «char_lit»
	LexTerm : •[ LexPattern ] «char_lit»
	LexTerm : •{ LexPattern } «char_lit»
	LexTerm : •( LexPattern ) «char_lit»
	LexTerm : •. «regDefId»
	LexTerm : •char_lit «regDefId»
	LexTerm : •char_lit - char_lit «regDefId»
	LexTerm : •regDefId «regDefId»
	LexTerm : •[ LexPattern ] «regDefId»
	LexTerm : •{ LexPattern } «regDefId»
	LexTerm : •( LexPattern ) «regDefId»
	LexTerm : •. «[»
	LexTerm : •char_lit «[»
	LexTerm : •char_lit - char_lit «[»
	LexTerm : •regDefId «[»
	LexTerm : •[ LexPattern ] «[»
	LexTerm : •{ LexPattern } «[»
	LexTerm : •( LexPattern ) «[»
	LexTerm : •. «{»
	LexTerm : •char_lit «{»
	LexTerm : •char_lit - char_lit «{»
	LexTerm : •regDefId «{»
	LexTerm : •[ LexPattern ] «{»
	LexTerm : •{ LexPattern } «{»
	LexTerm : •( LexPattern ) «{»
	LexTerm : •. «(»
	LexTerm : •char_lit «(»
	LexTerm : •char_lit - char_lit «(»
	LexTerm : •regDefId «(»
	LexTerm : •[ LexPattern ] «(»
	LexTerm : •{ LexPattern } «(»
	LexTerm : •( LexPattern ) «(»
}
Transitions:
	regDefId -> 67
	LexTerm -> 133
	. -> 70
	char_lit -> 71
	[ -> 72
	{ -> 73
	( -> 74


S175{
	LexTerm : char_lit - char_lit• «)»
	LexTerm : char_lit - char_lit• «.»
	LexTerm : char_lit - char_lit• «char_lit»
	LexTerm : char_lit - char_lit• «regDefId»
	LexTerm : char_lit - char_lit• «[»
	LexTerm : char_lit - char_lit• «{»
	LexTerm : char_lit - char_lit• «(»
	LexTerm : char_lit - char_lit• «|»
}
Transitions:


S176{
	LexTerm : [ LexPattern ]• «)»
	LexTerm : [ LexPattern ]• «.»
	LexTerm : [ LexPattern ]• «char_lit»
	LexTerm : [ LexPattern ]• «regDefId»
	LexTerm : [ LexPattern ]• «[»
	LexTerm : [ LexPattern ]• «{»
	LexTerm : [ LexPattern ]• «(»
	LexTerm : [ LexPattern ]• «|»
}
Transitions:


S177{
	LexTerm : { LexPattern }• «)»
	LexTerm : { LexPattern }• «.»
	LexTerm : { LexPattern }• «char_lit»
	LexTerm : { LexPattern }• «regDefId»
	LexTerm : { LexPattern }• «[»
	LexTerm : { LexPattern }• «{»
	LexTerm : { LexPattern }• «(»
	LexTerm : { LexPattern }• «|»
}
Transitions:


S178{
	LexTerm : ( LexPattern )• «)»
	LexTerm : ( LexPattern )• «.»
	LexTerm : ( LexPattern )• «char_lit»
	LexTerm : ( LexPattern )• «regDefId»
	LexTerm : ( LexPattern )• «[»
	LexTerm : ( LexPattern )• «{»
	LexTerm : ( LexPattern )• «(»
	LexTerm : ( LexPattern )• «|»
}
Transitions:


S179{
	SyntaxTerm : [ SyntaxExpression ]• «]»
	SyntaxTerm : [ SyntaxExpression ]• «actionLit»
	SyntaxTerm : [ SyntaxExpression ]• «prodId»
	SyntaxTerm : [ SyntaxExpression ]• «tokId»
	SyntaxTerm : [ SyntaxExpression ]• «stringLit»
	SyntaxTerm : [ SyntaxExpression ]• «(»
	SyntaxTerm : [ SyntaxExpression ]• «[»
	SyntaxTerm : [ SyntaxExpression ]• «{»
	SyntaxTerm : [ SyntaxExpression ]• «|»
}
Transitions:


S180{
	SyntaxTerm : { SyntaxExpression }• «]»
	SyntaxTerm : { SyntaxExpression }• «actionLit»
	SyntaxTerm : { SyntaxExpression }• «prodId»
	SyntaxTerm : { SyntaxExpression }• «tokId»
	SyntaxTerm : { SyntaxExpression }• «stringLit»
	SyntaxTerm : { SyntaxExpression }• «(»
	SyntaxTerm : { SyntaxExpression }• «[»
	SyntaxTerm : { SyntaxExpression }• «{»
	SyntaxTerm : { SyntaxExpression }• «|»
}
Transitions:


S181{
	SyntaxTerm : ( SyntaxExpression )• «]»
	SyntaxTerm : ( SyntaxExpression )• «actionLit»
	SyntaxTerm : ( SyntaxExpression )• «prodId»
	SyntaxTerm : ( SyntaxExpression )• «tokId»
	SyntaxTerm : ( SyntaxExpression )• «stringLit»
	SyntaxTerm : ( SyntaxExpression )• «(»
	SyntaxTerm : ( SyntaxExpression )• «[»
	SyntaxTerm : ( SyntaxExpression )• «{»
	SyntaxTerm : ( SyntaxExpression )• «|»
}
Transitions:


S182{
	SyntaxExpression : SyntaxExpression | SyntaxBody• «]»
	SyntaxExpression : SyntaxExpression | SyntaxBody• «|»
}
Transitions:


S183{
	SyntaxBody : error SyntaxTerms actionLit• «]»
	SyntaxBody : error SyntaxTerms actionLit• «|»
}
Transitions:


S184{
	SyntaxTerm : [ SyntaxExpression ]• «}»
	SyntaxTerm : [ SyntaxExpression ]• «actionLit»
	SyntaxTerm : [ SyntaxExpression ]• «prodId»
	SyntaxTerm : [ SyntaxExpression ]• «tokId»
	SyntaxTerm : [ SyntaxExpression ]• «stringLit»
	SyntaxTerm : [ SyntaxExpression ]• «(»
	SyntaxTerm : [ SyntaxExpression ]• «[»
	SyntaxTerm : [ SyntaxExpression ]• «{»
	SyntaxTerm : [ SyntaxExpression ]• «|»
}
Transitions:


S185{
	SyntaxTerm : { SyntaxExpression }• «}»
	SyntaxTerm : { SyntaxExpression }• «actionLit»
	SyntaxTerm : { SyntaxExpression }• «prodId»
	SyntaxTerm : { SyntaxExpression }• «tokId»
	SyntaxTerm : { SyntaxExpression }• «stringLit»
	SyntaxTerm : { SyntaxExpression }• «(»
	SyntaxTerm : { SyntaxExpression }• «[»
	SyntaxTerm : { SyntaxExpression }• «{»
	SyntaxTerm : { SyntaxExpression }• «|»
}
Transitions:


S186{
	SyntaxTerm : ( SyntaxExpression )• «}»
	SyntaxTerm : ( SyntaxExpression )• «actionLit»
	SyntaxTerm : ( SyntaxExpression )• «prodId»
	SyntaxTerm : ( SyntaxExpression )• «tokId»
	SyntaxTerm : ( SyntaxExpression )• «stringLit»
	SyntaxTerm : ( SyntaxExpression )• «(»
	SyntaxTerm : ( SyntaxExpression )• «[»
	SyntaxTerm : ( SyntaxExpression )• «{»
	SyntaxTerm : ( SyntaxExpression )• «|»
}
Transitions:


S187{
	SyntaxExpression : SyntaxExpression | SyntaxBody• «}»
	SyntaxExpression : SyntaxExpression | SyntaxBody• «|»
}
Transitions:


S188{
	SyntaxBody : error SyntaxTerms actionLit• «}»
	SyntaxBody : error SyntaxTerms actionLit• «|»
}
Transitions:


S189{
	SyntaxTerm : [ SyntaxExpression ]• «)»
	SyntaxTerm : [ SyntaxExpression ]• «actionLit»
	SyntaxTerm : [ SyntaxExpression ]• «prodId»
	SyntaxTerm : [ SyntaxExpression ]• «tokId»
	SyntaxTerm : [ SyntaxExpression ]• «stringLit»
	SyntaxTerm : [ SyntaxExpression ]• «(»
	SyntaxTerm : [ SyntaxExpression ]• «[»
	SyntaxTerm : [ SyntaxExpression ]• «{»
	SyntaxTerm : [ SyntaxExpression ]• «|»
}
Transitions:


S190{
	SyntaxTerm : { SyntaxExpression }• «)»
	SyntaxTerm : { SyntaxExpression }• «actionLit»
	SyntaxTerm : { SyntaxExpression }• «prodId»
	SyntaxTerm : { SyntaxExpression }• «tokId»
	SyntaxTerm : { SyntaxExpression }• «stringLit»
	SyntaxTerm : { SyntaxExpression }• «(»
	SyntaxTerm : { SyntaxExpression }• «[»
	SyntaxTerm : { SyntaxExpression }• «{»
	SyntaxTerm : { SyntaxExpression }• «|»
}
Transitions:


S191{
	SyntaxTerm : ( SyntaxExpression )• «)»
	SyntaxTerm : ( SyntaxExpression )• «actionLit»
	SyntaxTerm : ( SyntaxExpression )• «prodId»
	SyntaxTerm : ( SyntaxExpression )• «tokId»
	SyntaxTerm : ( SyntaxExpression )• «stringLit»
	SyntaxTerm : ( SyntaxExpression )• «(»
	SyntaxTerm : ( SyntaxExpression )• «[»
	SyntaxTerm : ( SyntaxExpression )• «{»
	SyntaxTerm : ( SyntaxExpression )• «|»
}
Transitions:


S192{
	SyntaxExpression : SyntaxExpression | SyntaxBody• «)»
	SyntaxExpression : SyntaxExpression | SyntaxBody• «|»
}
Transitions:


S193{
	SyntaxBody : error SyntaxTerms actionLit• «)»
	SyntaxBody : error SyntaxTerms actionLit• «|»
}
Transitions:


