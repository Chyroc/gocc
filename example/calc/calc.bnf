/* Lexical part */

_digit : '0'-'9' ;

int64 : '1'-'9' {_digit} ;

!whitespace : ' ' | '\t' | '\n' | '\r' ;

/* Syntax part */

<< 
import(
	"strconv" 
	"code.google.com/p/gocc/example/calc/token"
)

func intValue(tok interface{}) (int64, error) {
	return strconv.ParseInt(string(tok.(*token.Token).Lit), 10, 64)
}

>>

Calc : Expr;

Expr :
		Expr "+" Term	<< $0.(int64) + $2.(int64), nil >>
	|	Term			
;

Term :
		Term "*" Factor	<< $0.(int64) * $2.(int64), nil >>
	|	Factor			
;

Factor :
		"(" Expr ")"	<< $1, nil >>
	|	int64			<< intValue($0) >>
;
