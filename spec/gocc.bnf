/*******
Syntactic items
---------------

Grammar : [sdt_lit] Productions // The optional sdt_lit is for declarations in parser/table.go
		;

Productions	: Production					
			| Production Productions			
			;

Production	: id ":" Alternatives		
			;
			
Alternatives	:	Body					
				|	Body "|" Alternatives	
				;

Body	: Symbols					
		| Symbols sdt_lit			
		| "error"
		| "error" Symbols
		| "error" Symbols sdt_lit
		| "Îµ"							
		| "empty"
		;
		
Symbols	: Symbol					
		| Symbol Symbols			
		;
		
Symbol	: id							
		| string						
		| char	
		;
		
/********
Lexical items
The basic unit of input to the lexical analyser is a UTF-8 encoded Unicode code point, defined as:

_unicode_char : < any Unicode code point > .

_letter : 'A' ... 'Z' | 'a' ... 'z' | '_' ;

_digit : '0' ... '9' ;

char : "'" ( _unicode_value | _byte_value ) "'" ;

_unicode_value    : _unicode_char | _little_u_value | _big_u_value | _escaped_char ;
_byte_value       : _octal_byte_value | _hex_byte_value ;
_octal_byte_value : `\` _octal_digit _octal_digit _octal_digit ;
_hex_byte_value   : `\` "x" _hex_digit _hex_digit ;
_little_u_value   : `\` "u" _hex_digit _hex_digit _hex_digit _hex_digit ;
_big_u_value      : `\` "U" _hex_digit _hex_digit _hex_digit _hex_digit
                            _hex_digit _hex_digit _hex_digit _hex_digit ;
_escaped_char     : `\` ( "a" | "b" | "f" | "n" | "r" | "t" | "v" | `\` | `'` | `"` ) ;

id : _letter (_letter | _digit)* ;

string : _raw_string | _interpreted_string ;
_raw_string : "`" _unicode_char* "`" ;
_interpreted_string : `"` ( _unicode_value | byte_value )* `"` ;

sdt_lit	: '<' '<' _unicode_char+ '>' '>'
**********/

